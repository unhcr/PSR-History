--
-- ASR_TABLE2
--
create or replace view ASR_TABLE2 as
with Q_ASR_TABLE2 as
 (select ASR_YEAR, DST_ID, LOC_ID_ASYLUM_COUNTRY, LOC_ID_ORIGIN_COUNTRY, PGR_ID_PRIMARY,
    REFPOP_START_VALUE, REFPOP_START_STC_ID, REFPOP_START_VSN, REFPOP_START_ITM_ID,
    REFPOP_AH_START_VALUE, REFPOP_AH_START_STC_ID, REFPOP_AH_START_VSN, REFPOP_AH_START_ITM_ID,
    ARR_GRP_VALUE, ARR_GRP_STC_ID, ARR_GRP_VSN, ARR_GRP_ITM_ID,
    ARR_IND_VALUE, ARR_IND_STC_ID, ARR_IND_VSN, ARR_IND_ITM_ID,
    ARR_RESTL_VALUE, ARR_RESTL_STC_ID, ARR_RESTL_VSN, ARR_RESTL_ITM_ID,
    BIRTH_VALUE, BIRTH_STC_ID, BIRTH_VSN, BIRTH_ITM_ID,
    REFOTHINC_VALUE, REFOTHINC_STC_ID, REFOTHINC_VSN, REFOTHINC_ITM_ID,
    VOLREP_VALUE, VOLREP_STC_ID, VOLREP_VSN, VOLREP_ITM_ID,
    VOLREP_AH_VALUE, VOLREP_AH_STC_ID, VOLREP_AH_VSN, VOLREP_AH_ITM_ID,
    RESTL_VALUE, RESTL_STC_ID, RESTL_VSN, RESTL_ITM_ID,
    RESTL_AH_VALUE, RESTL_AH_STC_ID, RESTL_AH_VSN, RESTL_AH_ITM_ID,
    CESSATION_VALUE, CESSATION_STC_ID, CESSATION_VSN, CESSATION_ITM_ID,
    NATURLZN_VALUE, NATURLZN_STC_ID, NATURLZN_VSN, NATURLZN_ITM_ID,
    DEATH_VALUE, DEATH_STC_ID, DEATH_VSN, DEATH_ITM_ID,
    REFOTHDEC_VALUE, REFOTHDEC_STC_ID, REFOTHDEC_VSN, REFOTHDEC_ITM_ID,
    REFPOP_END_VALUE, REFPOP_END_STC_ID, REFPOP_END_VSN, REFPOP_END_ITM_ID,
    REFPOP_AH_END_VALUE, REFPOP_AH_END_STC_ID, REFPOP_AH_END_VSN, REFPOP_AH_END_ITM_ID
  from
   (select to_char(extract(year from STC.START_DATE)) as ASR_YEAR, STC.DST_ID,
      STC.LOC_ID_ASYLUM_COUNTRY, STC.LOC_ID_ORIGIN_COUNTRY, STC.PGR_ID_PRIMARY,
      replace(STC.STCT_CODE, '-', '_') ||
        case
          when extract(day from STC.END_DATE) = 2 then '_START'
          when extract(day from STC.START_DATE) = 31 then '_END'
        end as COLUMN_NAME,
      STC.VALUE,
      STC.ID as STC_ID,
      STC.VERSION_NBR as VSN,
      STC.ITM_ID
    from T_STATISTIC_TYPES_IN_GROUPS STCTG
    inner join T_STATISTICS STC
      on STC.STCT_CODE = STCTG.STCT_CODE
    where STCTG.STCG_CODE = 'ASRT2')
  pivot
   (sum(VALUE) as VALUE, max(STC_ID) as STC_ID, max(VSN) as VSN, max(ITM_ID) as ITM_ID
    for COLUMN_NAME
    in ('REFPOP_START' as REFPOP_START,
        'REFPOP_AH_START' as REFPOP_AH_START,
        'ARR_GRP' as ARR_GRP,
        'ARR_IND' as ARR_IND,
        'ARR_RESTL' as ARR_RESTL,
        'BIRTH' as BIRTH,
        'REFOTHINC' as REFOTHINC,
        'VOLREP' as VOLREP,
        'VOLREP_AH' as VOLREP_AH,
        'RESTL' as RESTL,
        'RESTL_AH' as RESTL_AH,
        'CESSATION' as CESSATION,
        'NATURLZN' as NATURLZN,
        'DEATH' as DEATH,
        'REFOTHDEC' as REFOTHDEC,
        'REFPOP_END' as REFPOP_END,
        'REFPOP_AH_END' as REFPOP_AH_END))),
--
Q_LOCATIONS as
 (select ID, NAME
  from
   (select LOC.ID, TXT.TEXT as NAME,
      row_number() over
       (partition by LOC.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATIONS LOC
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOC.ITM_ID
      and TXT.TXTT_CODE = 'NAME'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1),
--
Q_DISPLACEMENT_STATUSES as
 (select ID, DESCRIPTION, CODE
  from
   (select DST.ID, TXT.TEXT DESCRIPTION, DST.CODE,
      row_number() over
       (partition by DST.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_DISPLACEMENT_STATUSES DST
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = DST.ITM_ID
      and TXT.TXTT_CODE = 'DESCR'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1)
--
select AT2.ASR_YEAR,
  AT2.LOC_ID_ASYLUM_COUNTRY,
  cast(LOCA1.CHAR_VALUE as varchar2(3)) as ISO_COUNTRY_CODE,
  cast(LOCA2.CHAR_VALUE as varchar2(3)) as UNHCR_COUNTRY_CODE,
  LOC1.NAME as LOC_NAME_ASYLUM_COUNTRY,
  AT2.LOC_ID_ORIGIN_COUNTRY,
  cast(LOCA3.CHAR_VALUE as varchar2(3)) as ISO_ORIGIN_CODE,
  cast(LOCA4.CHAR_VALUE as varchar2(3)) as UNHCR_ORIGIN_CODE,
  LOC2.NAME as LOC_NAME_ORIGIN_COUNTRY,
  AT2.DST_ID, DST.DESCRIPTION as DST_DESCRIPTION, DST.CODE as DST_CODE,
  AT2.REFPOP_START_VALUE, AT2.REFPOP_START_STC_ID, AT2.REFPOP_START_VSN, AT2.REFPOP_START_ITM_ID,
  AT2.REFPOP_AH_START_VALUE, AT2.REFPOP_AH_START_STC_ID, AT2.REFPOP_AH_START_VSN,
  AT2.REFPOP_AH_START_ITM_ID,
  AT2.ARR_GRP_VALUE, AT2.ARR_GRP_STC_ID, AT2.ARR_GRP_VSN, AT2.ARR_GRP_ITM_ID,
  AT2.ARR_IND_VALUE, AT2.ARR_IND_STC_ID, AT2.ARR_IND_VSN, AT2.ARR_IND_ITM_ID,
  AT2.ARR_RESTL_VALUE, AT2.ARR_RESTL_STC_ID, AT2.ARR_RESTL_VSN, AT2.ARR_RESTL_ITM_ID,
  AT2.BIRTH_VALUE, AT2.BIRTH_STC_ID, AT2.BIRTH_VSN, AT2.BIRTH_ITM_ID,
  AT2.REFOTHINC_VALUE, AT2.REFOTHINC_STC_ID, AT2.REFOTHINC_VSN, AT2.REFOTHINC_ITM_ID,
  case
    when coalesce(AT2.ARR_GRP_VALUE, AT2.ARR_IND_VALUE, AT2.ARR_RESTL_VALUE,
                  AT2.BIRTH_VALUE, AT2.REFOTHINC_VALUE) is not null
    then nvl(AT2.ARR_GRP_VALUE, 0) + nvl(AT2.ARR_IND_VALUE, 0) + nvl(AT2.ARR_RESTL_VALUE, 0) +
      nvl(AT2.BIRTH_VALUE, 0) + nvl(AT2.REFOTHINC_VALUE, 0)
  end TOTAL_INCREASE,
  AT2.VOLREP_VALUE, AT2.VOLREP_STC_ID, AT2.VOLREP_VSN, AT2.VOLREP_ITM_ID,
  AT2.VOLREP_AH_VALUE, AT2.VOLREP_AH_STC_ID, AT2.VOLREP_AH_VSN, AT2.VOLREP_AH_ITM_ID,
  AT2.RESTL_VALUE, AT2.RESTL_STC_ID, AT2.RESTL_VSN, AT2.RESTL_ITM_ID,
  AT2.RESTL_AH_VALUE, AT2.RESTL_AH_STC_ID, AT2.RESTL_AH_VSN, AT2.RESTL_AH_ITM_ID,
  AT2.CESSATION_VALUE, AT2.CESSATION_STC_ID, AT2.CESSATION_VSN, AT2.CESSATION_ITM_ID,
  AT2.NATURLZN_VALUE, AT2.NATURLZN_STC_ID, AT2.NATURLZN_VSN, AT2.NATURLZN_ITM_ID,
  AT2.DEATH_VALUE, AT2.DEATH_STC_ID, AT2.DEATH_VSN, AT2.DEATH_ITM_ID,
  AT2.REFOTHDEC_VALUE, AT2.REFOTHDEC_STC_ID, AT2.REFOTHDEC_VSN, AT2.REFOTHDEC_ITM_ID,
  case
    when coalesce(AT2.VOLREP_VALUE, AT2.RESTL_VALUE, AT2.CESSATION_VALUE,
                  AT2.NATURLZN_VALUE, AT2.DEATH_VALUE, AT2.REFOTHDEC_VALUE) is not null
    then nvl(AT2.VOLREP_VALUE, 0) + nvl(AT2.RESTL_VALUE, 0) + nvl(AT2.CESSATION_VALUE, 0) +
      nvl(AT2.NATURLZN_VALUE, 0) + nvl(AT2.DEATH_VALUE, 0) + nvl(AT2.REFOTHDEC_VALUE, 0)
  end TOTAL_DECREASE,
  AT2.REFPOP_END_VALUE, AT2.REFPOP_END_STC_ID, AT2.REFPOP_END_VSN, AT2.REFPOP_END_ITM_ID,
  AT2.REFPOP_AH_END_VALUE, AT2.REFPOP_AH_END_STC_ID,  AT2.REFPOP_AH_END_VSN,AT2.REFPOP_AH_END_ITM_ID,
  PGRA1.CHAR_VALUE as SOURCE, PGRA2.CHAR_VALUE as BASIS
from Q_ASR_TABLE2 AT2
inner join Q_LOCATIONS LOC1
  on LOC1.ID = AT2.LOC_ID_ASYLUM_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA1
  on LOCA1.LOC_ID = LOC1.ID
  and LOCA1.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA2
  on LOCA2.LOC_ID = LOC1.ID
  and LOCA2.LOCAT_CODE = 'HCRCC'
left outer join Q_LOCATIONS LOC2
  on LOC2.ID = AT2.LOC_ID_ORIGIN_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA3
  on LOCA3.LOC_ID = LOC2.ID
  and LOCA3.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA4
  on LOCA4.LOC_ID = LOC2.ID
  and LOCA4.LOCAT_CODE = 'HCRCC'
inner join Q_DISPLACEMENT_STATUSES DST
  on DST.ID = AT2.DST_ID
left outer join T_POP_GROUP_ATTRIBUTES PGRA1
  on PGRA1.PGR_ID = AT2.PGR_ID_PRIMARY
  and PGRA1.PGRAT_CODE = 'SOURCE'
left outer join T_POP_GROUP_ATTRIBUTES PGRA2
  on PGRA2.PGR_ID = AT2.PGR_ID_PRIMARY
  and PGRA2.PGRAT_CODE = 'BASIS';

--
-- ASR_TABLE3
--
create or replace view ASR_TABLE3 as
with Q_ASR_TABLE3 as
 (select ASR_YEAR, DST_ID,
    LOC_ID_ASYLUM_COUNTRY, LOC_ID_ASYLUM, LOC_ID_ORIGIN_COUNTRY,
    DIM_ID1, DIM_ID2, PGR_ID_PRIMARY, PPG_ID,
    F0_4_VALUE, F0_4_STC_ID, F0_4_VSN, F0_4_ITM_ID,
    F5_11_VALUE, F5_11_STC_ID, F5_11_VSN, F5_11_ITM_ID,
    F12_17_VALUE, F12_17_STC_ID, F12_17_VSN, F12_17_ITM_ID,
    F18_59_VALUE, F18_59_STC_ID, F18_59_VSN, F18_59_ITM_ID,
    F60_VALUE, F60_STC_ID, F60_VSN, F60_ITM_ID,
    FOTHER_VALUE, FOTHER_STC_ID, FOTHER_VSN, FOTHER_ITM_ID,
    M0_4_VALUE, M0_4_STC_ID, M0_4_VSN, M0_4_ITM_ID,
    M5_11_VALUE, M5_11_STC_ID, M5_11_VSN, M5_11_ITM_ID,
    M12_17_VALUE, M12_17_STC_ID, M12_17_VSN, M12_17_ITM_ID,
    M18_59_VALUE, M18_59_STC_ID, M18_59_VSN, M18_59_ITM_ID,
    M60_VALUE, M60_STC_ID, M60_VSN, M60_ITM_ID,
    MOTHER_VALUE, MOTHER_STC_ID, MOTHER_VSN, MOTHER_ITM_ID,
    TOTAL_VALUE, TOTAL_STC_ID, TOTAL_VSN, TOTAL_ITM_ID
  from
   (select extract(year from STC.START_DATE) as ASR_YEAR, STC.DST_ID,
      STC.LOC_ID_ASYLUM_COUNTRY, STC.LOC_ID_ASYLUM, STC.LOC_ID_ORIGIN_COUNTRY,
      STC.DIM_ID1, STC.DIM_ID2, STC.PGR_ID_PRIMARY, STC.PPG_ID,
      STC.SEX_CODE || nvl(to_char(AGR.AGE_FROM), 'X') ||
        case when AGR.AGE_TO != 999 then '_' || to_char(AGR.AGE_TO) end as COLUMN_NAME,
      STC.VALUE,
      STC.ID as STC_ID,
      STC.VERSION_NBR as VSN,
      STC.ITM_ID
    from T_STATISTIC_TYPES_IN_GROUPS STCTG
    inner join T_STATISTICS STC
      on STC.STCT_CODE = STCTG.STCT_CODE
    left outer join T_AGE_RANGES AGR
      on AGR.ID = STC.AGR_ID
    where STCTG.STCG_CODE = 'ASRT3')
  pivot
   (sum(VALUE) as VALUE, max(STC_ID) as STC_ID, max(VSN) as VSN, max(ITM_ID) as ITM_ID
    for COLUMN_NAME
    in ('F0_4' as F0_4,
        'F5_11' as F5_11,
        'F12_17' as F12_17,
        'F18_59' as F18_59,
        'F60' as F60,
        'FX' as FOTHER,
        'M0_4' as M0_4,
        'M5_11' as M5_11,
        'M12_17' as M12_17,
        'M18_59' as M18_59,
        'M60' as M60,
        'MX' as MOTHER,
        'X' as TOTAL))),
--
Q_LOCATIONS as
 (select ID, NAME, LOCT_CODE, LOCTV_ID
  from
   (select LOC.ID, TXT.TEXT as NAME, LOC.LOCT_CODE, LOC.LOCTV_ID,
      row_number() over
       (partition by LOC.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATIONS LOC
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOC.ITM_ID
      and TXT.TXTT_CODE = 'NAME'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1),
--
Q_LOCATION_TYPES as
 (select CODE, DESCRIPTION
  from
   (select LOCT.CODE, TXT.TEXT DESCRIPTION,
      row_number() over
       (partition by LOCT.CODE
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATION_TYPES LOCT
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOCT.ITM_ID
      and TXT.TXTT_CODE = 'DESCR'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1),
--
Q_LOCATION_TYPE_VARIANTS as
 (select ID, DESCRIPTION
  from
    (select LOCTV.ID, TXT.TEXT DESCRIPTION,
      row_number() over
       (partition by LOCTV.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATION_TYPE_VARIANTS LOCTV
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOCTV.ITM_ID
      and TXT.TXTT_CODE = 'DESCR'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1),
--
Q_DIMENSION_VALUES as
 (select ID, DESCRIPTION, CODE
  from
   (select DIM.ID, TXT.TEXT DESCRIPTION, DIM.CODE,
      row_number() over
       (partition by DIM.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_DIMENSION_VALUES DIM
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = DIM.ITM_ID
      and TXT.TXTT_CODE = 'DESCR'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1),
--
Q_DISPLACEMENT_STATUSES as
 (select ID, DESCRIPTION, CODE
  from
   (select DST.ID, TXT.TEXT DESCRIPTION, DST.CODE,
      row_number() over
       (partition by DST.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_DISPLACEMENT_STATUSES DST
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = DST.ITM_ID
      and TXT.TXTT_CODE = 'DESCR'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1),
--
Q_POPULATION_PLANNING_GROUPS as
 (select ID, DESCRIPTION, PPG_CODE
  from
   (select PPG.ID, TXT.TEXT as DESCRIPTION, PPG.PPG_CODE,
      row_number() over
       (partition by PPG.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_POPULATION_PLANNING_GROUPS PPG
    inner join T_TEXT_ITEMS TXT
    on TXT.ITM_ID = PPG.ITM_ID
    and TXT.TXTT_CODE = 'DESCR'
    and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
    on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
    on ULP.LANG_CODE = TXT.LANG_CODE
    and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1)
--
select AT3.ASR_YEAR,
  AT3.LOC_ID_ASYLUM_COUNTRY,
  cast(LOCA1.CHAR_VALUE as varchar2(3)) as ISO_COUNTRY_CODE,
  cast(LOCA2.CHAR_VALUE as varchar2(3)) as UNHCR_COUNTRY_CODE,
  LOC1.NAME as LOC_NAME_ASYLUM_COUNTRY,
  AT3.LOC_ID_ASYLUM, LOC2.NAME as LOC_NAME_ASYLUM,
  nvl(LOCTV.DESCRIPTION, LOCT.DESCRIPTION) as LOC_TYPE_DESCRIPTION,
  DIM1.CODE as UR_CODE, DIM1.DESCRIPTION as UR_DESCRIPTION,
  DIM2.CODE as ACMT_CODE, DIM2.DESCRIPTION as ACMT_DESCRIPTION,
  AT3.DST_ID, DST.DESCRIPTION as DST_DESCRIPTION, DST.CODE as DST_CODE,
  cast(LOCA3.CHAR_VALUE as varchar2(3)) as ISO_ORIGIN_CODE,
  cast(LOCA4.CHAR_VALUE as varchar2(3)) as UNHCR_ORIGIN_CODE,
  LOC3.NAME as LOC_NAME_ORIGIN_COUNTRY,
  PPG.PPG_CODE, PPG.DESCRIPTION as PPG_DESCRIPTION,
  AT3.F0_4_VALUE, AT3.F0_4_STC_ID, AT3.F0_4_VSN, AT3.F0_4_ITM_ID,
  AT3.F5_11_VALUE, AT3.F5_11_STC_ID, AT3.F5_11_VSN, AT3.F5_11_ITM_ID,
  AT3.F12_17_VALUE, AT3.F12_17_STC_ID, AT3.F12_17_VSN, AT3.F12_17_ITM_ID,
  AT3.F18_59_VALUE, AT3.F18_59_STC_ID, AT3.F18_59_VSN, AT3.F18_59_ITM_ID,
  AT3.F60_VALUE, AT3.F60_STC_ID, AT3.F60_VSN, AT3.F60_ITM_ID,
  case
    when coalesce(AT3.F0_4_VALUE, AT3.F5_11_VALUE, AT3.F12_17_VALUE,
                  AT3.F18_59_VALUE, AT3.F60_VALUE) is not null
    then AT3.FOTHER_VALUE
  end as FOTHER_VALUE,
  case
    when coalesce(AT3.F0_4_STC_ID, AT3.F5_11_STC_ID, AT3.F12_17_STC_ID,
                  AT3.F18_59_STC_ID, AT3.F60_STC_ID) is not null
    then AT3.FOTHER_STC_ID
  end as FOTHER_STC_ID,
  case
    when coalesce(AT3.F0_4_STC_ID, AT3.F5_11_STC_ID, AT3.F12_17_STC_ID,
                  AT3.F18_59_STC_ID, AT3.F60_STC_ID) is not null
    then AT3.FOTHER_VSN
  end as FOTHER_VSN,
  case
    when coalesce(AT3.F0_4_STC_ID, AT3.F5_11_STC_ID, AT3.F12_17_STC_ID,
                  AT3.F18_59_STC_ID, AT3.F60_STC_ID) is not null
    then AT3.FOTHER_ITM_ID
  end as FOTHER_ITM_ID,
  case
    when coalesce(AT3.F0_4_STC_ID, AT3.F5_11_STC_ID, AT3.F12_17_STC_ID,
                  AT3.F18_59_STC_ID, AT3.F60_STC_ID, AT3.FOTHER_VALUE) is not null
    then nvl(AT3.F0_4_VALUE, 0) + nvl(AT3.F5_11_VALUE, 0) + nvl(AT3.F12_17_VALUE, 0) +
      nvl(AT3.F18_59_VALUE, 0) + nvl(AT3.F60_VALUE, 0) + nvl(AT3.FOTHER_VALUE, 0)
  end as FTOTAL_VALUE,
  case
    when coalesce(AT3.F0_4_STC_ID, AT3.F5_11_STC_ID, AT3.F12_17_STC_ID,
                  AT3.F18_59_STC_ID, AT3.F60_STC_ID) is null
    then AT3.FOTHER_STC_ID
  end as FTOTAL_STC_ID,
  case
    when coalesce(AT3.F0_4_STC_ID, AT3.F5_11_STC_ID, AT3.F12_17_STC_ID,
                  AT3.F18_59_STC_ID, AT3.F60_STC_ID) is null
    then AT3.FOTHER_VSN
  end as FTOTAL_VSN,
  case
    when coalesce(AT3.F0_4_STC_ID, AT3.F5_11_STC_ID, AT3.F12_17_STC_ID,
                  AT3.F18_59_STC_ID, AT3.F60_STC_ID) is null
    then AT3.FOTHER_ITM_ID
  end as FTOTAL_ITM_ID,
  AT3.M0_4_VALUE, AT3.M0_4_STC_ID, AT3.M0_4_VSN, AT3.M0_4_ITM_ID,
  AT3.M5_11_VALUE, AT3.M5_11_STC_ID, AT3.M5_11_VSN, AT3.M5_11_ITM_ID,
  AT3.M12_17_VALUE, AT3.M12_17_STC_ID, AT3.M12_17_VSN, AT3.M12_17_ITM_ID,
  AT3.M18_59_VALUE, AT3.M18_59_STC_ID, AT3.M18_59_VSN, AT3.M18_59_ITM_ID,
  AT3.M60_VALUE, AT3.M60_STC_ID, AT3.M60_VSN, AT3.M60_ITM_ID,
  case
    when coalesce(AT3.M0_4_VALUE, AT3.M5_11_VALUE, AT3.M12_17_VALUE,
                  AT3.M18_59_VALUE, AT3.M60_VALUE) is not null
    then AT3.MOTHER_VALUE
  end as MOTHER_VALUE,
  case
    when coalesce(AT3.M0_4_STC_ID, AT3.M5_11_STC_ID, AT3.M12_17_STC_ID,
                  AT3.M18_59_STC_ID, AT3.M60_STC_ID) is not null
    then AT3.MOTHER_STC_ID
  end as MOTHER_STC_ID,
  case
    when coalesce(AT3.M0_4_STC_ID, AT3.M5_11_STC_ID, AT3.M12_17_STC_ID,
                  AT3.M18_59_STC_ID, AT3.M60_STC_ID) is not null
    then AT3.MOTHER_VSN
  end as MOTHER_VSN,
  case
    when coalesce(AT3.M0_4_STC_ID, AT3.M5_11_STC_ID, AT3.M12_17_STC_ID,
                  AT3.M18_59_STC_ID, AT3.M60_STC_ID) is not null
    then AT3.MOTHER_ITM_ID
  end as MOTHER_ITM_ID,
  case
    when coalesce(AT3.M0_4_STC_ID, AT3.M5_11_STC_ID, AT3.M12_17_STC_ID,
                  AT3.M18_59_STC_ID, AT3.M60_STC_ID, AT3.MOTHER_VALUE) is not null
    then nvl(AT3.M0_4_VALUE, 0) + nvl(AT3.M5_11_VALUE, 0) + nvl(AT3.M12_17_VALUE, 0) +
      nvl(AT3.M18_59_VALUE, 0) + nvl(AT3.M60_VALUE, 0) + nvl(AT3.MOTHER_VALUE, 0)
  end as MTOTAL_VALUE,
  case
    when coalesce(AT3.M0_4_STC_ID, AT3.M5_11_STC_ID, AT3.M12_17_STC_ID,
                  AT3.M18_59_STC_ID, AT3.M60_STC_ID) is null
    then AT3.MOTHER_VSN
  end as MTOTAL_VSN,
  case
    when coalesce(AT3.M0_4_STC_ID, AT3.M5_11_STC_ID, AT3.M12_17_STC_ID,
                  AT3.M18_59_STC_ID, AT3.M60_STC_ID) is null
    then AT3.MOTHER_STC_ID
  end as MTOTAL_STC_ID,
  case
    when coalesce(AT3.M0_4_STC_ID, AT3.M5_11_STC_ID, AT3.M12_17_STC_ID,
                  AT3.M18_59_STC_ID, AT3.M60_STC_ID) is null
    then AT3.MOTHER_ITM_ID
  end as MTOTAL_ITM_ID,
  nvl(AT3.TOTAL_VALUE,
      nvl(AT3.F0_4_VALUE, 0) + nvl(AT3.F5_11_VALUE, 0) + nvl(AT3.F12_17_VALUE, 0) +
      nvl(AT3.F18_59_VALUE, 0) + nvl(AT3.F60_VALUE, 0) + nvl(AT3.FOTHER_VALUE, 0) +
      nvl(AT3.M0_4_VALUE, 0) + nvl(AT3.M5_11_VALUE, 0) + nvl(AT3.M12_17_VALUE, 0) +
      nvl(AT3.M18_59_VALUE, 0) + nvl(AT3.M60_VALUE, 0) + nvl(AT3.MOTHER_VALUE, 0)) as TOTAL_VALUE,
  AT3.TOTAL_STC_ID, AT3.TOTAL_VSN, AT3.TOTAL_ITM_ID,
  PGRA.CHAR_VALUE AS BASIS
from Q_ASR_TABLE3 AT3
inner join Q_LOCATIONS LOC1
  on LOC1.ID = AT3.LOC_ID_ASYLUM_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA1
  on LOCA1.LOC_ID = LOC1.ID
  and LOCA1.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA2
  on LOCA2.LOC_ID = LOC1.ID
  and LOCA2.LOCAT_CODE = 'HCRCC'
inner join Q_LOCATIONS LOC2
  on LOC2.ID = AT3.LOC_ID_ASYLUM
inner join Q_LOCATION_TYPES LOCT
  on LOCT.CODE = LOC2.LOCT_CODE
left outer join Q_LOCATION_TYPE_VARIANTS LOCTV
  on LOCTV.ID = LOC2.LOCTV_ID
inner join Q_DIMENSION_VALUES DIM1
  on DIM1.ID = AT3.DIM_ID1
inner join Q_DIMENSION_VALUES DIM2
  on DIM2.ID = AT3.DIM_ID2
inner join Q_DISPLACEMENT_STATUSES DST
  on DST.ID = AT3.DST_ID
left outer join Q_LOCATIONS LOC3
  on LOC3.ID = AT3.LOC_ID_ORIGIN_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA3
  on LOCA3.LOC_ID = LOC3.ID
  and LOCA3.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA4
  on LOCA4.LOC_ID = LOC3.ID
  and LOCA4.LOCAT_CODE = 'HCRCC'
left outer join Q_POPULATION_PLANNING_GROUPS PPG
  on PPG.ID = AT3.PPG_ID
left outer join T_POP_GROUP_ATTRIBUTES PGRA
  on PGRA.PGR_ID = AT3.PGR_ID_PRIMARY
  and PGRA.PGRAT_CODE = 'BASIS';

--
-- ASR_TABLE4
--
create or replace view ASR_TABLE4 as
with Q_ASR_TABLE4 as
 (select ASR_YEAR, DST_ID, LOC_ID_ASYLUM_COUNTRY, LOC_ID_ORIGIN_COUNTRY,
    UNCONV51_VALUE, UNCONV51_STC_ID, UNCONV51_VSN, UNCONV51_ITM_ID,
    OAUCONV69_VALUE, OAUCONV69_STC_ID, OAUCONV69_VSN, OAUCONV69_ITM_ID,
    HCRSTAT_VALUE, HCRSTAT_STC_ID, HCRSTAT_VSN, HCRSTAT_ITM_ID,
    COMPPROT_VALUE, COMPPROT_STC_ID, COMPPROT_VSN, COMPPROT_ITM_ID,
    TEMPPROT_VALUE, TEMPPROT_STC_ID, TEMPPROT_VSN, TEMPPROT_ITM_ID,
    OTHER_VALUE, OTHER_STC_ID, OTHER_VSN, OTHER_ITM_ID,
    UNKNOWN_VALUE, UNKNOWN_STC_ID, UNKNOWN_VSN, UNKNOWN_ITM_ID
  from
   (select to_char(extract(year from STC.START_DATE)) as ASR_YEAR, STC.DST_ID,
      STC.LOC_ID_ASYLUM_COUNTRY, STC.LOC_ID_ORIGIN_COUNTRY,
      DIM.CODE as COLUMN_NAME,
      STC.VALUE,
      STC.ID as STC_ID,
      STC.VERSION_NBR as VSN,
      STC.ITM_ID
    from T_STATISTIC_TYPES_IN_GROUPS STCTG
    inner join T_STATISTICS STC
      on STC.STCT_CODE = STCTG.STCT_CODE
    inner join T_DIMENSION_VALUES DIM
      on DIM.ID = STC.DIM_ID1
    where STCTG.STCG_CODE = 'ASRT4')
  pivot
   (sum(VALUE) as VALUE, max(STC_ID) as STC_ID, max(VSN) as VSN, max(ITM_ID) as ITM_ID
    for COLUMN_NAME
    in ('UNCONV51' as UNCONV51,
        'OAUCONV69' as OAUCONV69,
        'HCRSTAT' as HCRSTAT,
        'COMPPROT' as COMPPROT,
        'TEMPPROT' as TEMPPROT,
        'OTHER' as OTHER,
        'UNKNOWN' as UNKNOWN))),
--
Q_LOCATIONS as
 (select ID, NAME
  from
   (select LOC.ID, TXT.TEXT as NAME,
      row_number() over
       (partition by LOC.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATIONS LOC
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOC.ITM_ID
      and TXT.TXTT_CODE = 'NAME'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1),
--
Q_DISPLACEMENT_STATUSES as
 (select ID, DESCRIPTION, CODE
  from
   (select DST.ID, TXT.TEXT DESCRIPTION, DST.CODE,
      row_number() over
       (partition by DST.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_DISPLACEMENT_STATUSES DST
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = DST.ITM_ID
      and TXT.TXTT_CODE = 'DESCR'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1)
--
select AT4.ASR_YEAR,
  AT4.LOC_ID_ASYLUM_COUNTRY,
  cast(LOCA1.CHAR_VALUE as varchar2(3)) as ISO_COUNTRY_CODE,
  cast(LOCA2.CHAR_VALUE as varchar2(3)) as UNHCR_COUNTRY_CODE,
  LOC1.NAME as LOC_NAME_ASYLUM_COUNTRY,
  AT4.LOC_ID_ORIGIN_COUNTRY,
  cast(LOCA3.CHAR_VALUE as varchar2(3)) as ISO_ORIGIN_CODE,
  cast(LOCA4.CHAR_VALUE as varchar2(3)) as UNHCR_ORIGIN_CODE,
  LOC2.NAME as LOC_NAME_ORIGIN_COUNTRY,
  AT4.DST_ID, DST.DESCRIPTION as DST_DESCRIPTION, DST.CODE as DST_CODE,
  AT4.UNCONV51_VALUE, AT4.UNCONV51_STC_ID, AT4.UNCONV51_VSN, AT4.UNCONV51_ITM_ID,
  AT4.OAUCONV69_VALUE, AT4.OAUCONV69_STC_ID, AT4.OAUCONV69_VSN, AT4.OAUCONV69_ITM_ID,
  AT4.HCRSTAT_VALUE, AT4.HCRSTAT_STC_ID, AT4.HCRSTAT_VSN, AT4.HCRSTAT_ITM_ID,
  AT4.COMPPROT_VALUE, AT4.COMPPROT_STC_ID, AT4.COMPPROT_VSN, AT4.COMPPROT_ITM_ID,
  AT4.TEMPPROT_VALUE, AT4.TEMPPROT_STC_ID, AT4.TEMPPROT_VSN, AT4.TEMPPROT_ITM_ID,
  AT4.OTHER_VALUE, AT4.OTHER_STC_ID, AT4.OTHER_VSN, AT4.OTHER_ITM_ID,
  AT4.UNKNOWN_VALUE, AT4.UNKNOWN_STC_ID, AT4.UNKNOWN_VSN, AT4.UNKNOWN_ITM_ID,
  case
    when coalesce(AT4.UNCONV51_VALUE, AT4.OAUCONV69_VALUE, AT4.HCRSTAT_VALUE, AT4.COMPPROT_VALUE,
                  AT4.TEMPPROT_VALUE, AT4.OTHER_VALUE, AT4.UNKNOWN_VALUE) is not null
    then nvl(AT4.UNCONV51_VALUE, 0) + nvl(AT4.OAUCONV69_VALUE, 0) + nvl(AT4.HCRSTAT_VALUE, 0) +
      nvl(AT4.COMPPROT_VALUE, 0) + nvl(AT4.TEMPPROT_VALUE, 0) + nvl(AT4.OTHER_VALUE, 0) +
      nvl(AT4.UNKNOWN_VALUE, 0)
  end TOTAL_VALUE
from Q_ASR_TABLE4 AT4
inner join Q_LOCATIONS LOC1
  on LOC1.ID = AT4.LOC_ID_ASYLUM_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA1
  on LOCA1.LOC_ID = LOC1.ID
  and LOCA1.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA2
  on LOCA2.LOC_ID = LOC1.ID
  and LOCA2.LOCAT_CODE = 'HCRCC'
left outer join Q_LOCATIONS LOC2
  on LOC2.ID = AT4.LOC_ID_ORIGIN_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA3
  on LOCA3.LOC_ID = LOC2.ID
  and LOCA3.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA4
  on LOCA4.LOC_ID = LOC2.ID
  and LOCA4.LOCAT_CODE = 'HCRCC'
inner join Q_DISPLACEMENT_STATUSES DST
  on DST.ID = AT4.DST_ID;

--
-- ASR_TABLE5
--
create or replace view ASR_TABLE5 as
with Q_ASR_TABLE5 as
 (select ASR_YEAR, LOC_ID_ASYLUM_COUNTRY, LOC_ID_ORIGIN_COUNTRY, DIM_ID1, DIM_ID2,
    ASYPOP_START_VALUE, ASYPOP_START_STC_ID, ASYPOP_START_VSN, ASYPOP_START_ITM_ID,
    ASYPOP_AH_START_VALUE, ASYPOP_AH_START_STC_ID, ASYPOP_AH_START_VSN, ASYPOP_AH_START_ITM_ID,
    ASYAPP_VALUE, ASYAPP_STC_ID, ASYAPP_VSN, ASYAPP_ITM_ID,
    ASYREC_CV_VALUE, ASYREC_CV_STC_ID, ASYREC_CV_VSN, ASYREC_CV_ITM_ID,
    ASYREC_CP_VALUE, ASYREC_CP_STC_ID, ASYREC_CP_VSN, ASYREC_CP_ITM_ID,
    ASYREJ_VALUE, ASYREJ_STC_ID, ASYREJ_VSN, ASYREJ_ITM_ID,
    ASYOTHCL_VALUE, ASYOTHCL_STC_ID, ASYOTHCL_VSN, ASYOTHCL_ITM_ID,
    ASYPOP_END_VALUE, ASYPOP_END_STC_ID, ASYPOP_END_VSN, ASYPOP_END_ITM_ID,
    ASYPOP_AH_END_VALUE, ASYPOP_AH_END_STC_ID, ASYPOP_AH_END_VSN, ASYPOP_AH_END_ITM_ID
  from
   (select to_char(extract(year from STC.START_DATE)) as ASR_YEAR,
      STC.LOC_ID_ASYLUM_COUNTRY, STC.LOC_ID_ORIGIN_COUNTRY, STC.DIM_ID1, STC.DIM_ID2,
      replace(STC.STCT_CODE, '-', '_') ||
        case
          when extract(day from STC.END_DATE) = 2 then '_START'
          when extract(day from STC.START_DATE) = 31 then '_END'
        end as COLUMN_NAME,
      STC.VALUE,
      STC.ID as STC_ID,
      STC.VERSION_NBR as VSN,
      STC.ITM_ID
    from T_STATISTIC_TYPES_IN_GROUPS STCTG
    inner join T_STATISTICS STC
      on STC.STCT_CODE = STCTG.STCT_CODE
    inner join T_DIMENSION_VALUES DIM1
      on DIM1.ID = STC.DIM_ID1
    inner join T_DIMENSION_VALUES DIM2
      on DIM2.ID = STC.DIM_ID2
    where STCTG.STCG_CODE = 'ASRT5')
  pivot
   (sum(VALUE) as VALUE, max(STC_ID) as STC_ID, max(VSN) as VSN, max(ITM_ID) as ITM_ID
    for COLUMN_NAME
    in ('ASYPOP_START' as ASYPOP_START,
        'ASYPOP_AH_START' as ASYPOP_AH_START,
        'ASYAPP' as ASYAPP,
        'ASYREC_CV' as ASYREC_CV,
        'ASYREC_CP' as ASYREC_CP,
        'ASYREJ' as ASYREJ,
        'ASYOTHCL' as ASYOTHCL,
        'ASYPOP_END' as ASYPOP_END,
        'ASYPOP_AH_END' as ASYPOP_AH_END))),
--
Q_DIMENSION_VALUES as
 (select ID, DESCRIPTION, CODE
  from
   (select DIM.ID, TXT.TEXT DESCRIPTION, DIM.CODE,
      row_number() over
       (partition by DIM.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_DIMENSION_VALUES DIM
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = DIM.ITM_ID
      and TXT.TXTT_CODE = 'DESCR'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1),
--
Q_LOCATIONS as
 (select ID, NAME
  from
   (select LOC.ID, TXT.TEXT as NAME,
      row_number() over
       (partition by LOC.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATIONS LOC
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOC.ITM_ID
      and TXT.TXTT_CODE = 'NAME'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1)
--
select AT5.ASR_YEAR,
  AT5.LOC_ID_ASYLUM_COUNTRY,
  cast(LOCA1.CHAR_VALUE as varchar2(3)) as ISO_COUNTRY_CODE,
  cast(LOCA2.CHAR_VALUE as varchar2(3)) as UNHCR_COUNTRY_CODE,
  LOC1.NAME as LOC_NAME_ASYLUM_COUNTRY,
  DIM1.CODE as RSD_PROCEDURE_TYPE, DIM1.DESCRIPTION as RSD_PROCEDURE_TYPE_DESCRIPTION,
  DIM2.CODE as RSD_LEVEL, DIM2.DESCRIPTION as RSD_LEVEL_DESCRIPTION,
  cast(LOCA3.CHAR_VALUE as varchar2(3)) as ISO_ORIGIN_CODE,
  cast(LOCA4.CHAR_VALUE as varchar2(3)) as UNHCR_ORIGIN_CODE,
  LOC2.NAME as LOC_NAME_ORIGIN_COUNTRY,
  AT5.ASYPOP_START_VALUE, AT5.ASYPOP_START_STC_ID, AT5.ASYPOP_START_VSN, AT5.ASYPOP_START_ITM_ID,
  AT5.ASYPOP_AH_START_VALUE, AT5.ASYPOP_AH_START_STC_ID, AT5.ASYPOP_AH_START_VSN,
  AT5.ASYPOP_AH_START_ITM_ID,
  AT5.ASYAPP_VALUE, AT5.ASYAPP_STC_ID, AT5.ASYAPP_VSN, AT5.ASYAPP_ITM_ID,
  AT5.ASYREC_CV_VALUE, AT5.ASYREC_CV_STC_ID, AT5.ASYREC_CV_VSN, AT5.ASYREC_CV_ITM_ID,
  AT5.ASYREC_CP_VALUE, AT5.ASYREC_CP_STC_ID, AT5.ASYREC_CP_VSN, AT5.ASYREC_CP_ITM_ID,
  AT5.ASYREJ_VALUE, AT5.ASYREJ_STC_ID, AT5.ASYREJ_VSN, AT5.ASYREJ_ITM_ID,
  AT5.ASYOTHCL_VALUE, AT5.ASYOTHCL_STC_ID, AT5.ASYOTHCL_VSN, AT5.ASYOTHCL_ITM_ID,
  AT5.ASYPOP_END_VALUE, AT5.ASYPOP_END_STC_ID, AT5.ASYPOP_END_VSN, AT5.ASYPOP_END_ITM_ID,
  AT5.ASYPOP_AH_END_VALUE, AT5.ASYPOP_AH_END_STC_ID, AT5.ASYPOP_AH_END_VSN, AT5.ASYPOP_AH_END_ITM_ID
from Q_ASR_TABLE5 AT5
inner join Q_LOCATIONS LOC1
  on LOC1.ID = AT5.LOC_ID_ASYLUM_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA1
  on LOCA1.LOC_ID = LOC1.ID
  and LOCA1.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA2
  on LOCA2.LOC_ID = LOC1.ID
  and LOCA2.LOCAT_CODE = 'HCRCC'
inner join Q_DIMENSION_VALUES DIM1
  on DIM1.ID = AT5.DIM_ID1
inner join Q_DIMENSION_VALUES DIM2
  on DIM2.ID = AT5.DIM_ID2
left outer join Q_LOCATIONS LOC2
  on LOC2.ID = AT5.LOC_ID_ORIGIN_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA3
  on LOCA3.LOC_ID = LOC2.ID
  and LOCA3.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA4
  on LOCA4.LOC_ID = LOC2.ID
  and LOCA4.LOCAT_CODE = 'HCRCC';

--
-- ASR_TABLE6AB
--
create or replace view ASR_TABLE6AB as
with Q_ASR_TABLE6AB as
 (select ASR_YEAR, DST_ID, LOC_ID_ASYLUM_COUNTRY, LOC_ID_ASYLUM, DIM_ID1, PGR_ID_PRIMARY,
    IDPHPOP_START_VALUE, IDPHPOP_START_STC_ID, IDPHPOP_START_VSN, IDPHPOP_START_ITM_ID,
    IDPHPOP_AH_START_VALUE, IDPHPOP_AH_START_STC_ID, IDPHPOP_AH_START_VSN, IDPHPOP_AH_START_ITM_ID,
    IDPHNEW_VALUE, IDPHNEW_STC_ID, IDPHNEW_VSN, IDPHNEW_ITM_ID,
    IDPHOTHINC_VALUE, IDPHOTHINC_STC_ID, IDPHOTHINC_VSN, IDPHOTHINC_ITM_ID,
    IDPHRTN_VALUE, IDPHRTN_STC_ID, IDPHRTN_VSN, IDPHRTN_ITM_ID,
    IDPHRTN_AH_VALUE, IDPHRTN_AH_STC_ID, IDPHRTN_AH_VSN, IDPHRTN_AH_ITM_ID,
    IDPHRELOC_VALUE, IDPHRELOC_STC_ID, IDPHRELOC_VSN, IDPHRELOC_ITM_ID,
    IDPHOTHDEC_VALUE, IDPHOTHDEC_STC_ID, IDPHOTHDEC_VSN, IDPHOTHDEC_ITM_ID,
    IDPHPOP_END_VALUE, IDPHPOP_END_STC_ID, IDPHPOP_END_VSN, IDPHPOP_END_ITM_ID,
    IDPHPOP_AH_END_VALUE, IDPHPOP_AH_END_STC_ID, IDPHPOP_AH_END_VSN, IDPHPOP_AH_END_ITM_ID
  from
   (select to_char(extract(year from STC.START_DATE)) as ASR_YEAR, STC.DST_ID,
      STC.LOC_ID_ASYLUM_COUNTRY, STC.LOC_ID_ASYLUM, STC.DIM_ID1, STC.PGR_ID_PRIMARY,
      replace(STC.STCT_CODE, '-', '_') ||
        case
          when extract(day from STC.END_DATE) = 2 then '_START'
          when extract(day from STC.START_DATE) = 31 then '_END'
        end as COLUMN_NAME,
      STC.VALUE,
      STC.ID as STC_ID,
      STC.VERSION_NBR as VSN,
      STC.ITM_ID
    from T_STATISTIC_TYPES_IN_GROUPS STCTG
    inner join T_STATISTICS STC
      on STC.STCT_CODE = STCTG.STCT_CODE
    where STCTG.STCG_CODE = 'ASRT6AB')
  pivot
   (sum(VALUE) as VALUE, max(STC_ID) as STC_ID, max(VSN) as VSN, max(ITM_ID) as ITM_ID
    for COLUMN_NAME
    in ('IDPHPOP_START' as IDPHPOP_START,
        'IDPHPOP_AH_START' as IDPHPOP_AH_START,
        'IDPHNEW' as IDPHNEW,
        'IDPHOTHINC' as IDPHOTHINC,
        'IDPHRTN' as IDPHRTN,
        'IDPHRTN_AH' as IDPHRTN_AH,
        'IDPHRELOC' as IDPHRELOC,
        'IDPHOTHDEC' as IDPHOTHDEC,
        'IDPHPOP_END' as IDPHPOP_END,
        'IDPHPOP_AH_END' as IDPHPOP_AH_END))),
--
Q_LOCATIONS as
 (select ID, NAME, LOCT_CODE, LOCTV_ID
  from
   (select LOC.ID, TXT.TEXT as NAME, LOC.LOCT_CODE, LOC.LOCTV_ID,
      row_number() over
       (partition by LOC.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATIONS LOC
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOC.ITM_ID
      and TXT.TXTT_CODE = 'NAME'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1),
--
Q_LOCATION_TYPES as
 (select CODE, DESCRIPTION
  from
   (select LOCT.CODE, TXT.TEXT DESCRIPTION,
      row_number() over
       (partition by LOCT.CODE
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATION_TYPES LOCT
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOCT.ITM_ID
      and TXT.TXTT_CODE = 'DESCR'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1),
--
Q_LOCATION_TYPE_VARIANTS as
 (select ID, DESCRIPTION
  from
    (select LOCTV.ID, TXT.TEXT DESCRIPTION,
      row_number() over
       (partition by LOCTV.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATION_TYPE_VARIANTS LOCTV
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOCTV.ITM_ID
      and TXT.TXTT_CODE = 'DESCR'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1),
--
Q_DIMENSION_VALUES as
 (select ID, DESCRIPTION, CODE
  from
   (select DIM.ID, TXT.TEXT DESCRIPTION, DIM.CODE,
      row_number() over
       (partition by DIM.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_DIMENSION_VALUES DIM
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = DIM.ITM_ID
      and TXT.TXTT_CODE = 'DESCR'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1),
--
Q_DISPLACEMENT_STATUSES as
 (select ID, DESCRIPTION, CODE
  from
   (select DST.ID, TXT.TEXT DESCRIPTION, DST.CODE,
      row_number() over
       (partition by DST.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_DISPLACEMENT_STATUSES DST
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = DST.ITM_ID
      and TXT.TXTT_CODE = 'DESCR'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1)
--
select AT6AB.ASR_YEAR,
  AT6AB.LOC_ID_ASYLUM_COUNTRY,
  cast(LOCA1.CHAR_VALUE as varchar2(3)) as ISO_COUNTRY_CODE,
  cast(LOCA2.CHAR_VALUE as varchar2(3)) as UNHCR_COUNTRY_CODE,
  LOC1.NAME as LOC_NAME_ASYLUM_COUNTRY,
  AT6AB.DST_ID, DST.DESCRIPTION as DST_DESCRIPTION, DST.CODE as DST_CODE,
  LOC2.NAME as LOC_NAME_ASYLUM, nvl(LOCTV.DESCRIPTION, LOCT.DESCRIPTION) as LOC_TYPE_DESCRIPTION,
  DIM.CODE as OFFICIAL_CODE, DIM.DESCRIPTION as OFFICIAL_DESCRIPTION,
  AT6AB.IDPHPOP_START_VALUE, AT6AB.IDPHPOP_START_STC_ID, AT6AB.IDPHPOP_START_VSN,
  AT6AB.IDPHPOP_START_ITM_ID,
  AT6AB.IDPHPOP_AH_START_VALUE, AT6AB.IDPHPOP_AH_START_STC_ID, AT6AB.IDPHPOP_AH_START_VSN,
  AT6AB.IDPHPOP_AH_START_ITM_ID,
  AT6AB.IDPHNEW_VALUE, AT6AB.IDPHNEW_STC_ID, AT6AB.IDPHNEW_VSN, AT6AB.IDPHNEW_ITM_ID,
  AT6AB.IDPHOTHINC_VALUE, AT6AB.IDPHOTHINC_STC_ID, AT6AB.IDPHOTHINC_VSN, AT6AB.IDPHOTHINC_ITM_ID,
  AT6AB.IDPHRTN_VALUE, AT6AB.IDPHRTN_STC_ID, AT6AB.IDPHRTN_VSN, AT6AB.IDPHRTN_ITM_ID,
  AT6AB.IDPHRTN_AH_VALUE, AT6AB.IDPHRTN_AH_STC_ID, AT6AB.IDPHRTN_AH_VSN, AT6AB.IDPHRTN_AH_ITM_ID,
  AT6AB.IDPHRELOC_VALUE, AT6AB.IDPHRELOC_STC_ID, AT6AB.IDPHRELOC_VSN, AT6AB.IDPHRELOC_ITM_ID,
  AT6AB.IDPHOTHDEC_VALUE, AT6AB.IDPHOTHDEC_STC_ID, AT6AB.IDPHOTHDEC_VSN, AT6AB.IDPHOTHDEC_ITM_ID,
  AT6AB.IDPHPOP_END_VALUE, AT6AB.IDPHPOP_END_STC_ID, AT6AB.IDPHPOP_END_VSN,
  AT6AB.IDPHPOP_END_ITM_ID,
  AT6AB.IDPHPOP_AH_END_VALUE, AT6AB.IDPHPOP_AH_END_STC_ID, AT6AB.IDPHPOP_AH_END_VSN,
  AT6AB.IDPHPOP_AH_END_ITM_ID,
  PGRA1.CHAR_VALUE as SOURCE, PGRA2.CHAR_VALUE as BASIS
from Q_ASR_TABLE6AB AT6AB
inner join Q_LOCATIONS LOC1
  on LOC1.ID = AT6AB.LOC_ID_ASYLUM_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA1
  on LOCA1.LOC_ID = LOC1.ID
  and LOCA1.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA2
  on LOCA2.LOC_ID = LOC1.ID
  and LOCA2.LOCAT_CODE = 'HCRCC'
inner join Q_DISPLACEMENT_STATUSES DST
  on DST.ID = AT6AB.DST_ID
inner join Q_LOCATIONS LOC2
  on LOC2.ID = AT6AB.LOC_ID_ASYLUM
inner join Q_LOCATION_TYPES LOCT
  on LOCT.CODE = LOC2.LOCT_CODE
left outer join Q_LOCATION_TYPE_VARIANTS LOCTV
  on LOCTV.ID = LOC2.LOCTV_ID
inner join Q_DIMENSION_VALUES DIM
  on DIM.ID = AT6AB.DIM_ID1
left outer join T_POP_GROUP_ATTRIBUTES PGRA1
  on PGRA1.PGR_ID = AT6AB.PGR_ID_PRIMARY
  and PGRA1.PGRAT_CODE = 'SOURCE'
left outer join T_POP_GROUP_ATTRIBUTES PGRA2
  on PGRA2.PGR_ID = AT6AB.PGR_ID_PRIMARY
  and PGRA2.PGRAT_CODE = 'BASIS';

--
-- ASR_TABLE6C
--
create or replace view ASR_TABLE6C as
with Q_ASR_TABLE6C as
 (select ASR_YEAR, LOC_ID_ASYLUM_COUNTRY, LOC_ID_ASYLUM, PGR_ID_PRIMARY,
    IDPCPOP_START_VALUE, IDPCPOP_START_STC_ID, IDPCPOP_START_VSN, IDPCPOP_START_ITM_ID,
    IDPCPOP_AH_START_VALUE, IDPCPOP_AH_START_STC_ID, IDPCPOP_AH_START_VSN, IDPCPOP_AH_START_ITM_ID,
    IDPCNEW_VALUE, IDPCNEW_STC_ID, IDPCNEW_VSN, IDPCNEW_ITM_ID,
    IDPCOTHINC_VALUE, IDPCOTHINC_STC_ID, IDPCOTHINC_VSN, IDPCOTHINC_ITM_ID,
    IDPCRTN_VALUE, IDPCRTN_STC_ID, IDPCRTN_VSN, IDPCRTN_ITM_ID,
    IDPCRTN_AH_VALUE, IDPCRTN_AH_STC_ID, IDPCRTN_AH_VSN, IDPCRTN_AH_ITM_ID,
    IDPCRELOC_VALUE, IDPCRELOC_STC_ID, IDPCRELOC_VSN, IDPCRELOC_ITM_ID,
    IDPCOTHDEC_VALUE, IDPCOTHDEC_STC_ID, IDPCOTHDEC_VSN, IDPCOTHDEC_ITM_ID,
    IDPCPOP_END_VALUE, IDPCPOP_END_STC_ID, IDPCPOP_END_VSN, IDPCPOP_END_ITM_ID,
    IDPCPOP_AH_END_VALUE, IDPCPOP_AH_END_STC_ID, IDPCPOP_AH_END_VSN, IDPCPOP_AH_END_ITM_ID
  from
   (select to_char(extract(year from STC.START_DATE)) as ASR_YEAR,
      STC.LOC_ID_ASYLUM_COUNTRY, STC.LOC_ID_ASYLUM, STC.PGR_ID_PRIMARY,
      replace(STC.STCT_CODE, '-', '_') ||
        case
          when extract(day from STC.END_DATE) = 2 then '_START'
          when extract(day from STC.START_DATE) = 31 then '_END'
        end as COLUMN_NAME,
      STC.VALUE,
      STC.ID as STC_ID,
      STC.VERSION_NBR as VSN,
      STC.ITM_ID
    from T_STATISTIC_TYPES_IN_GROUPS STCTG
    inner join T_STATISTICS STC
      on STC.STCT_CODE = STCTG.STCT_CODE
    where STCTG.STCG_CODE = 'ASRT6C')
  pivot
   (sum(VALUE) as VALUE, max(STC_ID) as STC_ID, max(VSN) as VSN, max(ITM_ID) as ITM_ID
    for COLUMN_NAME
    in ('IDPCPOP_START' as IDPCPOP_START,
        'IDPCPOP_AH_START' as IDPCPOP_AH_START,
        'IDPCNEW' as IDPCNEW,
        'IDPCOTHINC' as IDPCOTHINC,
        'IDPCRTN' as IDPCRTN,
        'IDPCRTN_AH' as IDPCRTN_AH,
        'IDPCRELOC' as IDPCRELOC,
        'IDPCOTHDEC' as IDPCOTHDEC,
        'IDPCPOP_END' as IDPCPOP_END,
        'IDPCPOP_AH_END' as IDPCPOP_AH_END))),
--
Q_LOCATIONS as
 (select ID, NAME, LOCT_CODE, LOCTV_ID
  from
   (select LOC.ID, TXT.TEXT as NAME, LOC.LOCT_CODE, LOC.LOCTV_ID,
      row_number() over
       (partition by LOC.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATIONS LOC
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOC.ITM_ID
      and TXT.TXTT_CODE = 'NAME'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1),
--
Q_LOCATION_TYPES as
 (select CODE, DESCRIPTION
  from
   (select LOCT.CODE, TXT.TEXT DESCRIPTION,
      row_number() over
       (partition by LOCT.CODE
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATION_TYPES LOCT
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOCT.ITM_ID
      and TXT.TXTT_CODE = 'DESCR'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1),
--
Q_LOCATION_TYPE_VARIANTS as
 (select ID, DESCRIPTION
  from
    (select LOCTV.ID, TXT.TEXT DESCRIPTION,
      row_number() over
       (partition by LOCTV.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATION_TYPE_VARIANTS LOCTV
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOCTV.ITM_ID
      and TXT.TXTT_CODE = 'DESCR'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1)
--
select AT6C.ASR_YEAR,
  AT6C.LOC_ID_ASYLUM_COUNTRY,
  cast(LOCA1.CHAR_VALUE as varchar2(3)) as ISO_COUNTRY_CODE,
  cast(LOCA2.CHAR_VALUE as varchar2(3)) as UNHCR_COUNTRY_CODE,
  LOC1.NAME as LOC_NAME_ASYLUM_COUNTRY,
  AT6C.LOC_ID_ASYLUM, LOC2.NAME as LOC_NAME_ASYLUM,
  nvl(LOCTV.DESCRIPTION, LOCT.DESCRIPTION) as LOC_TYPE_DESCRIPTION,
  AT6C.IDPCPOP_START_VALUE, AT6C.IDPCPOP_START_STC_ID, AT6C.IDPCPOP_START_VSN,
  AT6C.IDPCPOP_START_ITM_ID,
  AT6C.IDPCPOP_AH_START_VALUE, AT6C.IDPCPOP_AH_START_STC_ID, AT6C.IDPCPOP_AH_START_VSN,
  AT6C.IDPCPOP_AH_START_ITM_ID,
  AT6C.IDPCNEW_VALUE, AT6C.IDPCNEW_STC_ID, AT6C.IDPCNEW_VSN, AT6C.IDPCNEW_ITM_ID,
  AT6C.IDPCOTHINC_VALUE, AT6C.IDPCOTHINC_STC_ID, AT6C.IDPCOTHINC_VSN, AT6C.IDPCOTHINC_ITM_ID,
  AT6C.IDPCRTN_VALUE, AT6C.IDPCRTN_STC_ID, AT6C.IDPCRTN_VSN, AT6C.IDPCRTN_ITM_ID,
  AT6C.IDPCRTN_AH_VALUE, AT6C.IDPCRTN_AH_STC_ID, AT6C.IDPCRTN_AH_VSN, AT6C.IDPCRTN_AH_ITM_ID,
  AT6C.IDPCRELOC_VALUE, AT6C.IDPCRELOC_STC_ID, AT6C.IDPCRELOC_VSN, AT6C.IDPCRELOC_ITM_ID,
  AT6C.IDPCOTHDEC_VALUE, AT6C.IDPCOTHDEC_STC_ID, AT6C.IDPCOTHDEC_VSN, AT6C.IDPCOTHDEC_ITM_ID,
  AT6C.IDPCPOP_END_VALUE, AT6C.IDPCPOP_END_STC_ID, AT6C.IDPCPOP_END_VSN, AT6C.IDPCPOP_END_ITM_ID,
  AT6C.IDPCPOP_AH_END_VALUE, AT6C.IDPCPOP_AH_END_STC_ID, AT6C.IDPCPOP_AH_END_VSN,
  AT6C.IDPCPOP_AH_END_ITM_ID,
  PGRA1.CHAR_VALUE as SOURCE, PGRA2.CHAR_VALUE as BASIS
from Q_ASR_TABLE6C AT6C
inner join Q_LOCATIONS LOC1
  on LOC1.ID = AT6C.LOC_ID_ASYLUM_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA1
  on LOCA1.LOC_ID = LOC1.ID
  and LOCA1.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA2
  on LOCA2.LOC_ID = LOC1.ID
  and LOCA2.LOCAT_CODE = 'HCRCC'
inner join Q_LOCATIONS LOC2
  on LOC2.ID = AT6C.LOC_ID_ASYLUM
inner join Q_LOCATION_TYPES LOCT
  on LOCT.CODE = LOC2.LOCT_CODE
left outer join Q_LOCATION_TYPE_VARIANTS LOCTV
  on LOCTV.ID = LOC2.LOCTV_ID
left outer join T_POP_GROUP_ATTRIBUTES PGRA1
  on PGRA1.PGR_ID = AT6C.PGR_ID_PRIMARY
  and PGRA1.PGRAT_CODE = 'SOURCE'
left outer join T_POP_GROUP_ATTRIBUTES PGRA2
  on PGRA2.PGR_ID = AT6C.PGR_ID_PRIMARY
  and PGRA2.PGRAT_CODE = 'BASIS';

--
-- ASR_TABLE6D
--
create or replace view ASR_TABLE6D as
with Q_ASR_TABLE6D as
 (select ASR_YEAR, LOC_ID_ASYLUM_COUNTRY, LOC_ID_ASYLUM, PGR_ID_PRIMARY,
    IDPDPOP_START_VALUE, IDPDPOP_START_STC_ID, IDPDPOP_START_VSN, IDPDPOP_START_ITM_ID,
    IDPDPOP_AH_START_VALUE, IDPDPOP_AH_START_STC_ID, IDPDPOP_AH_START_VSN, IDPDPOP_AH_START_ITM_ID,
    IDPDNEW_VALUE, IDPDNEW_STC_ID, IDPDNEW_VSN, IDPDNEW_ITM_ID,
    IDPDOTHINC_VALUE, IDPDOTHINC_STC_ID, IDPDOTHINC_VSN, IDPDOTHINC_ITM_ID,
    IDPDRTN_VALUE, IDPDRTN_STC_ID, IDPDRTN_VSN, IDPDRTN_ITM_ID,
    IDPDRTN_AH_VALUE, IDPDRTN_AH_STC_ID, IDPDRTN_AH_VSN, IDPDRTN_AH_ITM_ID,
    IDPDRELOC_VALUE, IDPDRELOC_STC_ID, IDPDRELOC_VSN, IDPDRELOC_ITM_ID,
    IDPDOTHDEC_VALUE, IDPDOTHDEC_STC_ID, IDPDOTHDEC_VSN, IDPDOTHDEC_ITM_ID,
    IDPDPOP_END_VALUE, IDPDPOP_END_STC_ID, IDPDPOP_END_VSN, IDPDPOP_END_ITM_ID,
    IDPDPOP_AH_END_VALUE, IDPDPOP_AH_END_STC_ID, IDPDPOP_AH_END_VSN, IDPDPOP_AH_END_ITM_ID
  from
   (select to_char(extract(year from STC.START_DATE)) as ASR_YEAR,
      STC.LOC_ID_ASYLUM_COUNTRY, STC.LOC_ID_ASYLUM, STC.PGR_ID_PRIMARY,
      replace(STC.STCT_CODE, '-', '_') ||
        case
          when extract(day from STC.END_DATE) = 2 then '_START'
          when extract(day from STC.START_DATE) = 31 then '_END'
        end as COLUMN_NAME,
      STC.VALUE,
      STC.ID as STC_ID,
      STC.VERSION_NBR as VSN,
      STC.ITM_ID
    from T_STATISTIC_TYPES_IN_GROUPS STCTG
    inner join T_STATISTICS STC
      on STC.STCT_CODE = STCTG.STCT_CODE
    where STCTG.STCG_CODE = 'ASRT6D')
  pivot
   (sum(VALUE) as VALUE, max(STC_ID) as STC_ID, max(VSN) as VSN, max(ITM_ID) as ITM_ID
    for COLUMN_NAME
    in ('IDPDPOP_START' as IDPDPOP_START,
        'IDPDPOP_AH_START' as IDPDPOP_AH_START,
        'IDPDNEW' as IDPDNEW,
        'IDPDOTHINC' as IDPDOTHINC,
        'IDPDRTN' as IDPDRTN,
        'IDPDRTN_AH' as IDPDRTN_AH,
        'IDPDRELOC' as IDPDRELOC,
        'IDPDOTHDEC' as IDPDOTHDEC,
        'IDPDPOP_END' as IDPDPOP_END,
        'IDPDPOP_AH_END' as IDPDPOP_AH_END))),
--
Q_LOCATIONS as
 (select ID, NAME, LOCT_CODE, LOCTV_ID
  from
   (select LOC.ID, TXT.TEXT as NAME, LOC.LOCT_CODE, LOC.LOCTV_ID,
      row_number() over
       (partition by LOC.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATIONS LOC
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOC.ITM_ID
      and TXT.TXTT_CODE = 'NAME'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1),
--
Q_LOCATION_TYPES as
 (select CODE, DESCRIPTION
  from
   (select LOCT.CODE, TXT.TEXT DESCRIPTION,
      row_number() over
       (partition by LOCT.CODE
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATION_TYPES LOCT
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOCT.ITM_ID
      and TXT.TXTT_CODE = 'DESCR'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1),
--
Q_LOCATION_TYPE_VARIANTS as
 (select ID, DESCRIPTION
  from
    (select LOCTV.ID, TXT.TEXT DESCRIPTION,
      row_number() over
       (partition by LOCTV.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATION_TYPE_VARIANTS LOCTV
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOCTV.ITM_ID
      and TXT.TXTT_CODE = 'DESCR'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1)
--
select AT6D.ASR_YEAR,
  AT6D.LOC_ID_ASYLUM_COUNTRY,
  cast(LOCA1.CHAR_VALUE as varchar2(3)) as ISO_COUNTRY_CODE,
  cast(LOCA2.CHAR_VALUE as varchar2(3)) as UNHCR_COUNTRY_CODE,
  LOC1.NAME as LOC_NAME_ASYLUM_COUNTRY,
  AT6D.LOC_ID_ASYLUM, LOC2.NAME as LOC_NAME_ASYLUM,
  nvl(LOCTV.DESCRIPTION, LOCT.DESCRIPTION) as LOC_TYPE_DESCRIPTION,
  AT6D.IDPDPOP_START_VALUE, AT6D.IDPDPOP_START_STC_ID, AT6D.IDPDPOP_START_VSN,
  AT6D.IDPDPOP_START_ITM_ID,
  AT6D.IDPDPOP_AH_START_VALUE, AT6D.IDPDPOP_AH_START_STC_ID, AT6D.IDPDPOP_AH_START_VSN,
  AT6D.IDPDPOP_AH_START_ITM_ID,
  AT6D.IDPDNEW_VALUE, AT6D.IDPDNEW_STC_ID, AT6D.IDPDNEW_VSN, AT6D.IDPDNEW_ITM_ID,
  AT6D.IDPDOTHINC_VALUE, AT6D.IDPDOTHINC_STC_ID, AT6D.IDPDOTHINC_VSN, AT6D.IDPDOTHINC_ITM_ID,
  AT6D.IDPDRTN_VALUE, AT6D.IDPDRTN_STC_ID, AT6D.IDPDRTN_VSN, AT6D.IDPDRTN_ITM_ID,
  AT6D.IDPDRTN_AH_VALUE, AT6D.IDPDRTN_AH_STC_ID, AT6D.IDPDRTN_AH_VSN, AT6D.IDPDRTN_AH_ITM_ID,
  AT6D.IDPDRELOC_VALUE, AT6D.IDPDRELOC_STC_ID, AT6D.IDPDRELOC_VSN, AT6D.IDPDRELOC_ITM_ID,
  AT6D.IDPDOTHDEC_VALUE, AT6D.IDPDOTHDEC_STC_ID, AT6D.IDPDOTHDEC_VSN, AT6D.IDPDOTHDEC_ITM_ID,
  AT6D.IDPDPOP_END_VALUE, AT6D.IDPDPOP_END_STC_ID, AT6D.IDPDPOP_END_VSN, AT6D.IDPDPOP_END_ITM_ID,
  AT6D.IDPDPOP_AH_END_VALUE, AT6D.IDPDPOP_AH_END_STC_ID, AT6D.IDPDPOP_AH_END_VSN,
  AT6D.IDPDPOP_AH_END_ITM_ID,
  PGRA1.CHAR_VALUE as SOURCE, PGRA2.CHAR_VALUE as BASIS
from Q_ASR_TABLE6D AT6D
inner join Q_LOCATIONS LOC1
  on LOC1.ID = AT6D.LOC_ID_ASYLUM_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA1
  on LOCA1.LOC_ID = LOC1.ID
  and LOCA1.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA2
  on LOCA2.LOC_ID = LOC1.ID
  and LOCA2.LOCAT_CODE = 'HCRCC'
inner join Q_LOCATIONS LOC2
  on LOC2.ID = AT6D.LOC_ID_ASYLUM
inner join Q_LOCATION_TYPES LOCT
  on LOCT.CODE = LOC2.LOCT_CODE
left outer join Q_LOCATION_TYPE_VARIANTS LOCTV
  on LOCTV.ID = LOC2.LOCTV_ID
left outer join T_POP_GROUP_ATTRIBUTES PGRA1
  on PGRA1.PGR_ID = AT6D.PGR_ID_PRIMARY
  and PGRA1.PGRAT_CODE = 'SOURCE'
left outer join T_POP_GROUP_ATTRIBUTES PGRA2
  on PGRA2.PGR_ID = AT6D.PGR_ID_PRIMARY
  and PGRA2.PGRAT_CODE = 'BASIS';

--
-- ASR_TABLE7AB
--
create or replace view ASR_TABLE7AB as
with Q_ASR_TABLE7AB as
 (select ASR_YEAR, DST_ID, LOC_ID_ASYLUM_COUNTRY, LOC_ID_ORIGIN_COUNTRY, PGR_ID_PRIMARY,
    REFRTN_VALUE, REFRTN_STC_ID, REFRTN_VSN, REFRTN_ITM_ID,
    REFRTN_AH_VALUE, REFRTN_AH_STC_ID, REFRTN_AH_VSN, REFRTN_AH_ITM_ID
  from
   (select to_char(extract(year from STC.START_DATE)) as ASR_YEAR, STC.DST_ID,
      STC.LOC_ID_ASYLUM_COUNTRY, STC.LOC_ID_ORIGIN_COUNTRY, STC.PGR_ID_PRIMARY,
      replace(STC.STCT_CODE, '-', '_') as COLUMN_NAME,
      STC.VALUE,
      STC.ID as STC_ID,
      STC.VERSION_NBR as VSN,
      STC.ITM_ID
    from T_STATISTIC_TYPES_IN_GROUPS STCTG
    inner join T_STATISTICS STC
      on STC.STCT_CODE = STCTG.STCT_CODE
    where STCTG.STCG_CODE = 'ASRT7AB')
  pivot
   (sum(VALUE) as VALUE, max(STC_ID) as STC_ID, max(VSN) as VSN, max(ITM_ID) as ITM_ID
    for COLUMN_NAME
    in ('REFRTN' as REFRTN,
        'REFRTN_AH' as REFRTN_AH))),
--
Q_LOCATIONS as
 (select ID, NAME
  from
   (select LOC.ID, TXT.TEXT as NAME,
      row_number() over
       (partition by LOC.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATIONS LOC
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOC.ITM_ID
      and TXT.TXTT_CODE = 'NAME'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1),
--
Q_DISPLACEMENT_STATUSES as
 (select ID, DESCRIPTION, CODE
  from
   (select DST.ID, TXT.TEXT DESCRIPTION, DST.CODE,
      row_number() over
       (partition by DST.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_DISPLACEMENT_STATUSES DST
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = DST.ITM_ID
      and TXT.TXTT_CODE = 'DESCR'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1)
--
select AT7AB.ASR_YEAR,
  AT7AB.LOC_ID_ORIGIN_COUNTRY,
  cast(LOCA1.CHAR_VALUE as varchar2(3)) as ISO_ORIGIN_CODE,
  cast(LOCA2.CHAR_VALUE as varchar2(3)) as UNHCR_ORIGIN_CODE,
  LOC1.NAME as LOC_NAME_ORIGIN_COUNTRY,
  AT7AB.DST_ID, DST.DESCRIPTION as DST_DESCRIPTION, DST.CODE as DST_CODE,
  cast(LOCA3.CHAR_VALUE as varchar2(3)) as ISO_COUNTRY_CODE,
  cast(LOCA4.CHAR_VALUE as varchar2(3)) as UNHCR_COUNTRY_CODE,
  LOC2.NAME as LOC_NAME_ASYLUM_COUNTRY,
  AT7AB.REFRTN_VALUE, AT7AB.REFRTN_STC_ID, AT7AB.REFRTN_VSN, AT7AB.REFRTN_ITM_ID,
  AT7AB.REFRTN_AH_VALUE, AT7AB.REFRTN_AH_STC_ID, AT7AB.REFRTN_AH_VSN, AT7AB.REFRTN_AH_ITM_ID,
  PGRA1.CHAR_VALUE as SOURCE, PGRA2.CHAR_VALUE as BASIS
from Q_ASR_TABLE7AB AT7AB
inner join Q_LOCATIONS LOC1
  on LOC1.ID = AT7AB.LOC_ID_ORIGIN_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA1
  on LOCA1.LOC_ID = LOC1.ID
  and LOCA1.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA2
  on LOCA2.LOC_ID = LOC1.ID
  and LOCA2.LOCAT_CODE = 'HCRCC'
left outer join Q_LOCATIONS LOC2
  on LOC2.ID = AT7AB.LOC_ID_ASYLUM_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA3
  on LOCA3.LOC_ID = LOC2.ID
  and LOCA3.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA4
  on LOCA4.LOC_ID = LOC2.ID
  and LOCA4.LOCAT_CODE = 'HCRCC'
inner join Q_DISPLACEMENT_STATUSES DST
  on DST.ID = AT7AB.DST_ID
left outer join T_POP_GROUP_ATTRIBUTES PGRA1
  on PGRA1.PGR_ID = AT7AB.PGR_ID_PRIMARY
  and PGRA1.PGRAT_CODE = 'SOURCE'
left outer join T_POP_GROUP_ATTRIBUTES PGRA2
  on PGRA2.PGR_ID = AT7AB.PGR_ID_PRIMARY
  and PGRA2.PGRAT_CODE = 'BASIS';

--
-- ASR_TABLE7C
--
create or replace view ASR_TABLE7C as
with Q_ASR_TABLE7C as
 (select ASR_YEAR, LOC_ID_ASYLUM_COUNTRY, PGR_ID_PRIMARY,
    STAPOP_START_VALUE, STAPOP_START_STC_ID, STAPOP_START_VSN, STAPOP_START_ITM_ID,
    STAPOP_AH_START_VALUE, STAPOP_AH_START_STC_ID, STAPOP_AH_START_VSN, STAPOP_AH_START_ITM_ID,
    NATLOSS_VALUE, NATLOSS_STC_ID, NATLOSS_VSN, NATLOSS_ITM_ID,
    STAOTHINC_VALUE, STAOTHINC_STC_ID, STAOTHINC_VSN, STAOTHINC_ITM_ID,
    NATACQ_VALUE, NATACQ_STC_ID, NATACQ_VSN, NATACQ_ITM_ID,
    STAOTHDEC_VALUE, STAOTHDEC_STC_ID, STAOTHDEC_VSN, STAOTHDEC_ITM_ID,
    STAPOP_END_VALUE, STAPOP_END_STC_ID, STAPOP_END_VSN, STAPOP_END_ITM_ID,
    STAPOP_AH_END_VALUE, STAPOP_AH_END_STC_ID, STAPOP_AH_END_VSN, STAPOP_AH_END_ITM_ID
  from
   (select to_char(extract(year from STC.START_DATE)) as ASR_YEAR,
      STC.LOC_ID_ASYLUM_COUNTRY, STC.LOC_ID_ORIGIN_COUNTRY, STC.PGR_ID_PRIMARY,
      replace(STC.STCT_CODE, '-', '_') ||
        case
          when extract(day from STC.END_DATE) = 2 then '_START'
          when extract(day from STC.START_DATE) = 31 then '_END'
        end as COLUMN_NAME,
      STC.VALUE,
      STC.ID as STC_ID,
      STC.VERSION_NBR as VSN,
      STC.ITM_ID
    from T_STATISTIC_TYPES_IN_GROUPS STCTG
    inner join T_STATISTICS STC
      on STC.STCT_CODE = STCTG.STCT_CODE
    where STCTG.STCG_CODE = 'ASRT7C')
  pivot
   (sum(VALUE) as VALUE, max(STC_ID) as STC_ID, max(VSN) as VSN, max(ITM_ID) as ITM_ID
    for COLUMN_NAME
    in ('STAPOP_START' as STAPOP_START,
        'STAPOP_AH_START' as STAPOP_AH_START,
        'NATLOSS' as NATLOSS,
        'STAOTHINC' as STAOTHINC,
        'NATACQ' as NATACQ,
        'STAOTHDEC' as STAOTHDEC,
        'STAPOP_END' as STAPOP_END,
        'STAPOP_AH_END' as STAPOP_AH_END))),
--
Q_LOCATIONS as
 (select ID, NAME
  from
   (select LOC.ID, TXT.TEXT as NAME,
      row_number() over
       (partition by LOC.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATIONS LOC
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOC.ITM_ID
      and TXT.TXTT_CODE = 'NAME'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1)
--
select AT7C.ASR_YEAR,
  AT7C.LOC_ID_ASYLUM_COUNTRY,
  cast(LOCA1.CHAR_VALUE as varchar2(3)) as ISO_COUNTRY_CODE,
  cast(LOCA2.CHAR_VALUE as varchar2(3)) as UNHCR_COUNTRY_CODE,
  LOC.NAME as LOC_NAME_ASYLUM_COUNTRY,
  PGR.SUBGROUP_NAME as DESCRIPTION,
  AT7C.STAPOP_START_VALUE, AT7C.STAPOP_START_STC_ID, AT7C.STAPOP_START_VSN,
  AT7C.STAPOP_START_ITM_ID,
  AT7C.STAPOP_AH_START_VALUE, AT7C.STAPOP_AH_START_STC_ID, AT7C.STAPOP_AH_START_VSN,
  AT7C.STAPOP_AH_START_ITM_ID,
  AT7C.NATLOSS_VALUE, AT7C.NATLOSS_STC_ID, AT7C.NATLOSS_VSN, AT7C.NATLOSS_ITM_ID,
  AT7C.STAOTHINC_VALUE, AT7C.STAOTHINC_STC_ID, AT7C.STAOTHINC_VSN, AT7C.STAOTHINC_ITM_ID,
  AT7C.NATACQ_VALUE, AT7C.NATACQ_STC_ID, AT7C.NATACQ_VSN, AT7C.NATACQ_ITM_ID,
  AT7C.STAOTHDEC_VALUE, AT7C.STAOTHDEC_STC_ID, AT7C.STAOTHDEC_VSN, AT7C.STAOTHDEC_ITM_ID,
  AT7C.STAPOP_END_VALUE, AT7C.STAPOP_END_STC_ID, AT7C.STAPOP_END_VSN, AT7C.STAPOP_END_ITM_ID,
  AT7C.STAPOP_AH_END_VALUE, AT7C.STAPOP_AH_END_STC_ID, AT7C.STAPOP_AH_END_VSN,
  AT7C.STAPOP_AH_END_ITM_ID,
  PGRA1.CHAR_VALUE as SOURCE, PGRA2.CHAR_VALUE as BASIS
from Q_ASR_TABLE7C AT7C
inner join Q_LOCATIONS LOC
  on LOC.ID = AT7C.LOC_ID_ASYLUM_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA1
  on LOCA1.LOC_ID = LOC.ID
  and LOCA1.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA2
  on LOCA2.LOC_ID = LOC.ID
  and LOCA2.LOCAT_CODE = 'HCRCC'
left outer join POPULATION_GROUPS PGR
  on PGR.ID = AT7C.PGR_ID_PRIMARY
left outer join T_POP_GROUP_ATTRIBUTES PGRA1
  on PGRA1.PGR_ID = PGR.ID
  and PGRA1.PGRAT_CODE = 'SOURCE'
left outer join T_POP_GROUP_ATTRIBUTES PGRA2
  on PGRA2.PGR_ID = PGR.ID
  and PGRA2.PGRAT_CODE = 'BASIS';

--
-- ASR_TABLE7D
--
create or replace view ASR_TABLE7D as
with Q_ASR_TABLE7D as
 (select ASR_YEAR, LOC_ID_ASYLUM_COUNTRY, LOC_ID_ORIGIN_COUNTRY, PGR_ID_PRIMARY,
    OOCPOP_START_VALUE, OOCPOP_START_STC_ID, OOCPOP_START_VSN, OOCPOP_START_ITM_ID,
    OOCPOP_AH_START_VALUE, OOCPOP_AH_START_STC_ID, OOCPOP_AH_START_VSN, OOCPOP_AH_START_ITM_ID,
    OOCARR_VALUE, OOCARR_STC_ID, OOCARR_VSN, OOCARR_ITM_ID,
    OOCOTHINC_VALUE, OOCOTHINC_STC_ID, OOCOTHINC_VSN, OOCOTHINC_ITM_ID,
    OOCRTN_VALUE, OOCRTN_STC_ID, OOCRTN_VSN, OOCRTN_ITM_ID,
    OOCOTHDEC_VALUE, OOCOTHDEC_STC_ID, OOCOTHDEC_VSN, OOCOTHDEC_ITM_ID,
    OOCPOP_END_VALUE, OOCPOP_END_STC_ID, OOCPOP_END_VSN, OOCPOP_END_ITM_ID,
    OOCPOP_AH_END_VALUE, OOCPOP_AH_END_STC_ID, OOCPOP_AH_END_VSN, OOCPOP_AH_END_ITM_ID
  from
   (select to_char(extract(year from STC.START_DATE)) as ASR_YEAR,
      STC.LOC_ID_ASYLUM_COUNTRY, STC.LOC_ID_ORIGIN_COUNTRY, STC.PGR_ID_PRIMARY,
      replace(STC.STCT_CODE, '-', '_') ||
        case
          when extract(day from STC.END_DATE) = 2 then '_START'
          when extract(day from STC.START_DATE) = 31 then '_END'
        end as COLUMN_NAME,
      STC.VALUE,
      STC.ID as STC_ID,
      STC.VERSION_NBR as VSN,
      STC.ITM_ID
    from T_STATISTIC_TYPES_IN_GROUPS STCTG
    inner join T_STATISTICS STC
      on STC.STCT_CODE = STCTG.STCT_CODE
    where STCTG.STCG_CODE = 'ASRT7D')
  pivot
   (sum(VALUE) as VALUE, max(STC_ID) as STC_ID, max(VSN) as VSN, max(ITM_ID) as ITM_ID
    for COLUMN_NAME
    in ('OOCPOP_START' as OOCPOP_START,
        'OOCPOP_AH_START' as OOCPOP_AH_START,
        'OOCARR' as OOCARR,
        'OOCOTHINC' as OOCOTHINC,
        'OOCRTN' as OOCRTN,
        'OOCOTHDEC' as OOCOTHDEC,
        'OOCPOP_END' as OOCPOP_END,
        'OOCPOP_AH_END' as OOCPOP_AH_END))),
--
Q_LOCATIONS as
 (select ID, NAME
  from
   (select LOC.ID, TXT.TEXT as NAME,
      row_number() over
       (partition by LOC.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATIONS LOC
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOC.ITM_ID
      and TXT.TXTT_CODE = 'NAME'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1)
--
select AT7D.ASR_YEAR,
  AT7D.LOC_ID_ASYLUM_COUNTRY,
  cast(LOCA1.CHAR_VALUE as varchar2(3)) as ISO_COUNTRY_CODE,
  cast(LOCA2.CHAR_VALUE as varchar2(3)) as UNHCR_COUNTRY_CODE,
  LOC1.NAME as LOC_NAME_ASYLUM_COUNTRY,
  AT7D.LOC_ID_ORIGIN_COUNTRY,
  cast(LOCA3.CHAR_VALUE as varchar2(3)) as ISO_ORIGIN_CODE,
  cast(LOCA4.CHAR_VALUE as varchar2(3)) as UNHCR_ORIGIN_CODE,
  LOC2.NAME as LOC_NAME_ORIGIN_COUNTRY,
  PGR.SUBGROUP_NAME as DESCRIPTION,
  AT7D.OOCPOP_START_VALUE, AT7D.OOCPOP_START_STC_ID, AT7D.OOCPOP_START_VSN,
  AT7D.OOCPOP_START_ITM_ID,
  AT7D.OOCPOP_AH_START_VALUE, AT7D.OOCPOP_AH_START_STC_ID, AT7D.OOCPOP_AH_START_VSN,
  AT7D.OOCPOP_AH_START_ITM_ID,
  AT7D.OOCARR_VALUE, AT7D.OOCARR_STC_ID, AT7D.OOCARR_VSN, AT7D.OOCARR_ITM_ID,
  AT7D.OOCOTHINC_VALUE, AT7D.OOCOTHINC_STC_ID, AT7D.OOCOTHINC_VSN, AT7D.OOCOTHINC_ITM_ID,
  AT7D.OOCRTN_VALUE, AT7D.OOCRTN_STC_ID, AT7D.OOCRTN_VSN, AT7D.OOCRTN_ITM_ID,
  AT7D.OOCOTHDEC_VALUE, AT7D.OOCOTHDEC_STC_ID, AT7D.OOCOTHDEC_VSN, AT7D.OOCOTHDEC_ITM_ID,
  AT7D.OOCPOP_END_VALUE, AT7D.OOCPOP_END_STC_ID, AT7D.OOCPOP_END_VSN, AT7D.OOCPOP_END_ITM_ID,
  AT7D.OOCPOP_AH_END_VALUE, AT7D.OOCPOP_AH_END_STC_ID, AT7D.OOCPOP_AH_END_VSN,
  AT7D.OOCPOP_AH_END_ITM_ID,
  PGRA1.CHAR_VALUE as SOURCE, PGRA2.CHAR_VALUE as BASIS
from Q_ASR_TABLE7D AT7D
inner join Q_LOCATIONS LOC1
  on LOC1.ID = AT7D.LOC_ID_ASYLUM_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA1
  on LOCA1.LOC_ID = LOC1.ID
  and LOCA1.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA2
  on LOCA2.LOC_ID = LOC1.ID
  and LOCA2.LOCAT_CODE = 'HCRCC'
left outer join Q_LOCATIONS LOC2
  on LOC2.ID = AT7D.LOC_ID_ORIGIN_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA3
  on LOCA3.LOC_ID = LOC2.ID
  and LOCA3.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA4
  on LOCA4.LOC_ID = LOC2.ID
  and LOCA4.LOCAT_CODE = 'HCRCC'
left outer join POPULATION_GROUPS PGR
  on PGR.ID = AT7D.PGR_ID_PRIMARY
left outer join T_POP_GROUP_ATTRIBUTES PGRA1
  on PGRA1.PGR_ID = PGR.ID
  and PGRA1.PGRAT_CODE = 'SOURCE'
left outer join T_POP_GROUP_ATTRIBUTES PGRA2
  on PGRA2.PGR_ID = PGR.ID
  and PGRA2.PGRAT_CODE = 'BASIS';

--
-- COUNTRY_DISPLACED_STATISTICS
--
create or replace view COUNTRY_DISPLACED_STATISTICS as
with Q_STATISTICS as
 (select ASR_YEAR, LOC_ID_ASYLUM_COUNTRY, LOC_ID_ORIGIN_COUNTRY,
    REFUGEES, REFUGEES_ASSISTED, REFUGEE_LIKE, REFUGEE_LIKE_ASSISTED,
    ASYLUM_SEEKERS, ASYLUM_SEEKERS_ASSISTED,
    IDPS, IDPS_ASSISTED, IDP_LIKE, IDP_LIKE_ASSISTED,
    RETURNED_IDPS, RETURNED_IDPS_ASSISTED,
    RETURNED_IDP_LIKE, RETURNED_IDP_LIKE_ASSISTED,
    STATELESS, STATELESS_ASSISTED, OTHERS, OTHERS_ASSISTED
  from
   (select cast(to_char(extract(year from STC.START_DATE)) as varchar2(4)) as ASR_YEAR,
      STC.LOC_ID_ASYLUM_COUNTRY, STC.LOC_ID_ORIGIN_COUNTRY,
      DST.CODE || '_' || replace(STC.STCT_CODE, '-', '_') as COLUMN_NAME,
      STC.VALUE
    from T_STATISTICS STC
    inner join T_DISPLACEMENT_STATUSES DST
      on DST.ID = STC.DST_ID
    where STC.STCT_CODE in
      ('REFPOP', 'REFPOP-AH', 'ASYPOP', 'ASYPOP-AH',
       'IDPPOP', 'IDPPOP-AH', 'IDPRTN', 'IDPRTN-AH',
       'STAPOP', 'STAPOP-AH', 'OOCPOP', 'OOCPOP-AH')
    and extract(day from STC.START_DATE) = 31
    and DST.CODE IN ('REF', 'ROC', 'ASY', 'IDP', 'IOC', 'RDP', 'STA', 'OOC'))
  pivot
   (sum(VALUE)
    for COLUMN_NAME
    in ('REF_REFPOP' as REFUGEES,
        'REF_REFPOP_AH' as REFUGEES_ASSISTED,
        'ROC_REFPOP' as REFUGEE_LIKE,
        'ROC_REFPOP_AH' as REFUGEE_LIKE_ASSISTED,
        'ASY_ASYPOP' as ASYLUM_SEEKERS,
        'ASY_ASYPOP_AH' as ASYLUM_SEEKERS_ASSISTED,
        'IDP_IDPPOP' as IDPS,
        'IDP_IDPPOP_AH' as IDPS_ASSISTED,
        'IOC_IDPPOP' as IDP_LIKE,
        'IOC_IDPPOP_AH' as IDP_LIKE_ASSISTED,
        'IDP_IDPRTN' as RETURNED_IDPS,
        'IDP_IDPRTN_AH' as RETURNED_IDPS_ASSISTED,
        'IOC_IDPRTN' as RETURNED_IDP_LIKE,
        'IOC_IDPRTN_AH' as RETURNED_IDP_LIKE_ASSISTED,
        'STA_STAPOP' as STATELESS,
        'STA_STAPOP_AH' as STATELESS_ASSISTED,
        'OOC_OOCPOP' as OTHERS,
        'OOC_OOCPOP_AH' as OTHERS_ASSISTED))),
--
Q_LOCATIONS as
 (select ID, NAME
  from
   (select LOC.ID, TXT.TEXT as NAME,
      row_number() over
       (partition by LOC.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATIONS LOC
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOC.ITM_ID
      and TXT.TXTT_CODE = 'NAME'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1)
--
select STC.ASR_YEAR,
  STC.LOC_ID_ASYLUM_COUNTRY,
  cast(LOCA1.CHAR_VALUE as varchar2(3)) as ISO_COUNTRY_CODE,
  cast(LOCA2.CHAR_VALUE as varchar2(3)) as UNHCR_COUNTRY_CODE,
  LOC1.NAME as LOC_NAME_ASYLUM_COUNTRY,
  STC.LOC_ID_ORIGIN_COUNTRY,
  cast(LOCA3.CHAR_VALUE as varchar2(3)) as ISO_ORIGIN_CODE,
  cast(LOCA4.CHAR_VALUE as varchar2(3)) as UNHCR_ORIGIN_CODE,
  LOC2.NAME as LOC_NAME_ORIGIN_COUNTRY,
  STC.REFUGEES, STC.REFUGEES_ASSISTED, STC.REFUGEE_LIKE, STC.REFUGEE_LIKE_ASSISTED,
  STC.ASYLUM_SEEKERS, STC.ASYLUM_SEEKERS_ASSISTED,
  STC.IDPS, STC.IDPS_ASSISTED, STC.IDP_LIKE, STC.IDP_LIKE_ASSISTED,
  case
    when coalesce(STC.RETURNED_IDPS, STC.RETURNED_IDP_LIKE) is null
    then cast(null as number)
    else nvl(STC.RETURNED_IDPS, 0) + nvl(STC.RETURNED_IDP_LIKE, 0)
  end as RETURNED_IDPS,
  case
    when coalesce(STC.RETURNED_IDPS_ASSISTED, STC.RETURNED_IDP_LIKE_ASSISTED) is null
    then cast(null as number)
    else nvl(STC.RETURNED_IDPS_ASSISTED, 0) + nvl(STC.RETURNED_IDP_LIKE_ASSISTED, 0)
  end as RETURNED_IDPS_ASSISTED,
  STC.STATELESS, STC.STATELESS_ASSISTED, STC.OTHERS, STC.OTHERS_ASSISTED
from Q_STATISTICS STC
inner join Q_LOCATIONS LOC1
  on LOC1.ID = STC.LOC_ID_ASYLUM_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA1
  on LOCA1.LOC_ID = LOC1.ID
  and LOCA1.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA2
  on LOCA2.LOC_ID = LOC1.ID
  and LOCA2.LOCAT_CODE = 'HCRCC'
left outer join Q_LOCATIONS LOC2
  on LOC2.ID = STC.LOC_ID_ORIGIN_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA3
  on LOCA3.LOC_ID = LOC2.ID
  and LOCA3.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA4
  on LOCA4.LOC_ID = LOC2.ID
  and LOCA4.LOCAT_CODE = 'HCRCC';

--
-- COUNTRY_RETURNED_STATISTICS
--
create or replace view COUNTRY_RETURNED_STATISTICS as
with Q_STATISTICS as
 (select ASR_YEAR, LOC_ID_ASYLUM_COUNTRY, LOC_ID_ORIGIN_COUNTRY,
    REPATRIATED, REPATRIATED_ASSISTED, RETURNEES, RETURNEES_ASSISTED
  from
   (select cast(to_char(extract(year from START_DATE)) as varchar2(4)) as ASR_YEAR,
      LOC_ID_ASYLUM_COUNTRY, LOC_ID_ORIGIN_COUNTRY,
      replace(STCT_CODE, '-', '_') as COLUMN_NAME,
      VALUE
    from T_STATISTICS
    where STCT_CODE in ('VOLREP', 'VOLREP-AH', 'REFRTN', 'REFRTN-AH'))
  pivot
   (sum(VALUE)
    for COLUMN_NAME
    in ('VOLREP' as REPATRIATED,
        'VOLREP-AH' as REPATRIATED_ASSISTED,
        'REFRTN' as RETURNEES,
        'REFRTN-AH' as RETURNEES_ASSISTED))),
--
Q_LOCATIONS as
 (select ID, NAME
  from
   (select LOC.ID, TXT.TEXT as NAME,
      row_number() over
       (partition by LOC.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATIONS LOC
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOC.ITM_ID
      and TXT.TXTT_CODE = 'NAME'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1)
--
select STC.ASR_YEAR,
  STC.LOC_ID_ASYLUM_COUNTRY,
  cast(LOCA1.CHAR_VALUE as varchar2(3)) as ISO_COUNTRY_CODE,
  cast(LOCA2.CHAR_VALUE as varchar2(3)) as UNHCR_COUNTRY_CODE,
  LOC1.NAME as LOC_NAME_ASYLUM_COUNTRY,
  STC.LOC_ID_ORIGIN_COUNTRY,
  cast(LOCA3.CHAR_VALUE as varchar2(3)) as ISO_ORIGIN_CODE,
  cast(LOCA4.CHAR_VALUE as varchar2(3)) as UNHCR_ORIGIN_CODE,
  LOC2.NAME as LOC_NAME_ORIGIN_COUNTRY,
  STC.REPATRIATED, STC.REPATRIATED_ASSISTED, STC.RETURNEES, STC.RETURNEES_ASSISTED,
  greatest(nvl(REPATRIATED, RETURNEES), nvl(RETURNEES, REPATRIATED)) as RETURNED,
  greatest(nvl(REPATRIATED_ASSISTED, RETURNEES_ASSISTED),
           nvl(RETURNEES_ASSISTED, REPATRIATED_ASSISTED)) as RETURNED_ASSISTED
from Q_STATISTICS STC
inner join Q_LOCATIONS LOC1
  on LOC1.ID = STC.LOC_ID_ASYLUM_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA1
  on LOCA1.LOC_ID = LOC1.ID
  and LOCA1.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA2
  on LOCA2.LOC_ID = LOC1.ID
  and LOCA2.LOCAT_CODE = 'HCRCC'
left outer join Q_LOCATIONS LOC2
  on LOC2.ID = STC.LOC_ID_ORIGIN_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA3
  on LOCA3.LOC_ID = LOC2.ID
  and LOCA3.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA4
  on LOCA4.LOC_ID = LOC2.ID
  and LOCA4.LOCAT_CODE = 'HCRCC';

--
-- ASR_TPOC
--
create or replace view ASR_TPOC as
with Q_TPOC as
 (select ASR_YEAR, LOC_ID_ASYLUM_COUNTRY,
    sum(REFPOP_REF_VALUE) as REFPOP_REF_VALUE,
    sum(REFPOP_AH_REF_VALUE) as REFPOP_AH_REF_VALUE,
    sum(REFPOP_ROC_VALUE) as REFPOP_ROC_VALUE,
    sum(REFPOP_AH_ROC_VALUE) as REFPOP_AH_ROC_VALUE,
    sum(ASYPOP_ASY_VALUE) as ASYPOP_ASY_VALUE,
    sum(greatest(nvl(VOLREP_REF_VALUE, REFRTN_REF_VALUE),
                 nvl(REFRTN_REF_VALUE, VOLREP_REF_VALUE))) as RETURN_REF_VALUE,
    sum(IDPHPOP_IDP_VALUE) as IDPHPOP_IDP_VALUE,
    sum(IDPHPOP_IOC_VALUE) as IDPHPOP_IOC_VALUE,
    sum(IDPHRTN_IDP_VALUE) as IDPHRTN_IDP_VALUE,
    sum(IDPHRTN_IOC_VALUE) as IDPHRTN_IOC_VALUE,
    sum(STAPOP_STA_VALUE) as STAPOP_STA_VALUE,
    sum(OOCPOP_OOC_VALUE) as OOCPOP_OOC_VALUE
  from
   (select ASR_YEAR, LOC_ID_ASYLUM_COUNTRY, LOC_ID_ORIGIN_COUNTRY,
      REFPOP_REF_VALUE, REFPOP_AH_REF_VALUE,
      REFPOP_ROC_VALUE, REFPOP_AH_ROC_VALUE,
      ASYPOP_ASY_VALUE,
      VOLREP_REF_VALUE, REFRTN_REF_VALUE,
      IDPHPOP_IDP_VALUE, IDPHPOP_IOC_VALUE,
      IDPHRTN_IDP_VALUE, IDPHRTN_IOC_VALUE,
      STAPOP_STA_VALUE,
      OOCPOP_OOC_VALUE
    from
     (select to_char(extract(year from STC.START_DATE)) as ASR_YEAR,
        case
          when STC.STCT_CODE in ('VOLREP', 'REFRTN') then STC.LOC_ID_ORIGIN_COUNTRY
          else STC.LOC_ID_ASYLUM_COUNTRY
        end as LOC_ID_ASYLUM_COUNTRY,
        case
          when STC.STCT_CODE in ('VOLREP', 'REFRTN') then STC.LOC_ID_ASYLUM_COUNTRY
          else STC.LOC_ID_ORIGIN_COUNTRY
        end as LOC_ID_ORIGIN_COUNTRY,
        replace(STC.STCT_CODE, '-', '_') || '_' || DST.CODE as COLUMN_NAME,
        VALUE
      from T_STATISTICS STC
      inner join T_DISPLACEMENT_STATUSES DST
        on DST.ID = STC.DST_ID
      where extract(day from STC.END_DATE) = 1
      and (STC.STCT_CODE, DST.CODE) in
       (('REFPOP', 'REF'),
        ('REFPOP-AH', 'REF'),
        ('REFPOP', 'ROC'),
        ('REFPOP-AH', 'ROC'),
        ('ASYPOP', 'ASY'),
        ('VOLREP', 'REF'),
        ('REFRTN', 'REF'),
        ('IDPHPOP', 'IDP'),
        ('IDPHPOP', 'IOC'),
        ('IDPHRTN', 'IDP'),
        ('IDPHRTN', 'IOC'),
        ('STAPOP', 'STA'),
        ('OOCPOP', 'OOC'))
      and nvl(STC.DIM_ID1, -1) !=
       (select ID
        from T_DIMENSION_VALUES
        where DIMT_CODE = 'OFFICIAL'
        and CODE = 'N'))
    pivot
     (sum(VALUE) as VALUE
      for COLUMN_NAME
      in ('REFPOP_REF' as REFPOP_REF,
          'REFPOP_AH_REF' as REFPOP_AH_REF,
          'REFPOP_ROC' as REFPOP_ROC,
          'REFPOP_AH_ROC' as REFPOP_AH_ROC,
          'ASYPOP_ASY' as ASYPOP_ASY,
          'VOLREP_REF' as VOLREP_REF,
          'REFRTN_REF' as REFRTN_REF,
          'IDPHPOP_IDP' as IDPHPOP_IDP,
          'IDPHPOP_IOC' as IDPHPOP_IOC,
          'IDPHRTN_IDP' as IDPHRTN_IDP,
          'IDPHRTN_IOC' as IDPHRTN_IOC,
          'STAPOP_STA' as STAPOP_STA,
          'OOCPOP_OOC' as OOCPOP_OOC)))
  group by ASR_YEAR, LOC_ID_ASYLUM_COUNTRY),
--
Q_LOCATIONS as
 (select ID, NAME
  from
   (select LOC.ID, TXT.TEXT as NAME,
      row_number() over
       (partition by LOC.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_LOCATIONS LOC
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = LOC.ITM_ID
      and TXT.TXTT_CODE = 'NAME'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1)
select TPOC.ASR_YEAR,
  TPOC.LOC_ID_ASYLUM_COUNTRY,
  cast(LOCA1.CHAR_VALUE as varchar2(3)) as ISO_COUNTRY_CODE,
  cast(LOCA2.CHAR_VALUE as varchar2(3)) as UNHCR_COUNTRY_CODE,
  LOC.NAME as LOC_NAME_ASYLUM_COUNTRY,
  nvl(TPOC.REFPOP_REF_VALUE, 0) as REFUGEES,
  nvl(TPOC.REFPOP_AH_REF_VALUE, 0) as REFUGEES_ASSISTED,
  nvl(TPOC.REFPOP_ROC_VALUE, 0) as REFUGEE_LIKE,
  nvl(TPOC.REFPOP_AH_ROC_VALUE, 0) as REFUGEE_LIKE_ASSISTED,
  nvl(TPOC.REFPOP_REF_VALUE, 0) + nvl(TPOC.REFPOP_ROC_VALUE, 0) as REFUGEES_TOTAL,
  nvl(TPOC.REFPOP_AH_REF_VALUE, 0) + nvl(TPOC.REFPOP_AH_ROC_VALUE, 0) as REFUGEES_TOTAL_ASSISTED,
  nvl(TPOC.ASYPOP_ASY_VALUE, 0) as ASYLUM_SEEKERS,
  nvl(TPOC.RETURN_REF_VALUE, 0) as REFUGEES_RETURNED,
  nvl(TPOC.IDPHPOP_IDP_VALUE, 0) as IDPS,
  nvl(TPOC.IDPHPOP_IOC_VALUE, 0) as IDP_LIKE,
  nvl(TPOC.IDPHPOP_IDP_VALUE, 0) + nvl(TPOC.IDPHPOP_IOC_VALUE, 0) as IDPS_TOTAL,
  nvl(TPOC.IDPHRTN_IDP_VALUE, 0) + nvl(TPOC.IDPHRTN_IOC_VALUE, 0) as IDPS_TOTAL_RETURNED,
  nvl(TPOC.STAPOP_STA_VALUE, 0) as STATELESS,
  nvl(TPOC.OOCPOP_OOC_VALUE, 0) as OTHERS_OF_CONCERN,
  nvl(TPOC.REFPOP_REF_VALUE, 0) + nvl(TPOC.REFPOP_ROC_VALUE, 0) +
    nvl(TPOC.ASYPOP_ASY_VALUE, 0) + nvl(TPOC.RETURN_REF_VALUE, 0) +
    nvl(TPOC.IDPHPOP_IDP_VALUE, 0) + nvl(TPOC.IDPHPOP_IOC_VALUE, 0) +
    nvl(TPOC.IDPHRTN_IDP_VALUE, 0) + nvl(TPOC.IDPHRTN_IOC_VALUE, 0) +
    nvl(TPOC.STAPOP_STA_VALUE, 0) + nvl(TPOC.OOCPOP_OOC_VALUE, 0) as POC_TOTAL
from Q_TPOC TPOC
inner join Q_LOCATIONS LOC
  on LOC.ID = TPOC.LOC_ID_ASYLUM_COUNTRY
left outer join T_LOCATION_ATTRIBUTES LOCA1
  on LOCA1.LOC_ID = LOC.ID
  and LOCA1.LOCAT_CODE = 'IS03166A3'
left outer join T_LOCATION_ATTRIBUTES LOCA2
  on LOCA2.LOC_ID = LOC.ID
  and LOCA2.LOCAT_CODE = 'HCRCC';