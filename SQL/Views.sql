create or replace view PIVOTED_STATISTICS
as
select ISO_COUNTRY_CODE COUNTRY_CODE, UNHCR_COUNTRY_CODE, LOC_NAME_COUNTRY,
  LOC_NAME_ASYLUM LOC_NAME,
  URBAN_RURAL,
  ACCOMMODATION_TYPE,
  DST_CODE,
  DST_DESCRIPTION,
  ISO_ORIGIN_CODE, UNHCR_ORIGIN_CODE, LOC_NAME_ORIGIN OGN_NAME,
  FEMALE_0_4,
  FEMALE_5_11,
  FEMALE_12_17,
  FEMALE_18_59,
  FEMALE_60_PLUS,
  FEMALE_UNSPECIFIED,
  case
    when nvl(FEMALE_0_4, 0) + nvl(FEMALE_5_11, 0) + nvl(FEMALE_12_17, 0) + nvl(FEMALE_18_59, 0) + nvl(FEMALE_60_PLUS, 0) + nvl(FEMALE_UNSPECIFIED, 0) > 0
    then nvl(FEMALE_0_4, 0) + nvl(FEMALE_5_11, 0) + nvl(FEMALE_12_17, 0) + nvl(FEMALE_18_59, 0) + nvl(FEMALE_60_PLUS, 0) + nvl(FEMALE_UNSPECIFIED, 0)
  end FEMALE_TOTAL,
  MALE_0_4,
  MALE_5_11,
  MALE_12_17,
  MALE_18_59,
  MALE_60_PLUS,
  MALE_UNSPECIFIED,
  case
    when nvl(MALE_0_4, 0) + nvl(MALE_5_11, 0) + nvl(MALE_12_17, 0) + nvl(MALE_18_59, 0) + nvl(MALE_60_PLUS, 0) + nvl(MALE_UNSPECIFIED, 0) > 0
    then nvl(MALE_0_4, 0) + nvl(MALE_5_11, 0) + nvl(MALE_12_17, 0) + nvl(MALE_18_59, 0) + nvl(MALE_60_PLUS, 0) + nvl(MALE_UNSPECIFIED, 0)
  end MALE_TOTAL,
  UNSPECIFIED,
  nvl(FEMALE_0_4, 0) + nvl(FEMALE_5_11, 0) + nvl(FEMALE_12_17, 0) + nvl(FEMALE_18_59, 0) +
    nvl(FEMALE_60_PLUS, 0) + nvl(FEMALE_UNSPECIFIED, 0) +
    nvl(MALE_0_4, 0) + nvl(MALE_5_11, 0) + nvl(MALE_12_17, 0) + nvl(MALE_18_59, 0) +
    nvl(MALE_60_PLUS, 0) + nvl(MALE_UNSPECIFIED, 0) +
    nvl(UNSPECIFIED, 0) TOTAL
from
 (select ISO_COUNTRY_CODE, UNHCR_COUNTRY_CODE, LOC_NAME_COUNTRY,
    LOC_NAME_ASYLUM,
    case when DIMT_CODE1 = 'UR' then DIM_DESCRIPTION1 end URBAN_RURAL,
    case when DIMT_CODE2 = 'ACMT' then DIM_DESCRIPTION2 end ACCOMMODATION_TYPE,
    DST_CODE,
    DST_DESCRIPTION,
    ISO_ORIGIN_CODE, UNHCR_ORIGIN_CODE, LOC_NAME_ORIGIN,
    nvl(SEX_CODE, 'X') SEX_CODE,
    nvl(AGE_FROM, -1) AGE_FROM,
    VALUE
  from STATISTICS)
pivot
 (sum(VALUE)
  for (SEX_CODE, AGE_FROM)
  in (('F', 0) as FEMALE_0_4,
    ('F', 5) as FEMALE_5_11,
    ('F', 12) as FEMALE_12_17,
    ('F', 18) as FEMALE_18_59,
    ('F', 60) as FEMALE_60_PLUS,
    ('F', -1) as FEMALE_UNSPECIFIED,
    ('M', 0) as MALE_0_4,
    ('M', 5) as MALE_5_11,
    ('M', 12) as MALE_12_17,
    ('M', 18) as MALE_18_59,
    ('M', 60) as MALE_60_PLUS,
    ('M', -1) as MALE_UNSPECIFIED,
    ('X', -1) as UNSPECIFIED));

create or replace view ASR_TABLE2
as
select STATSYEAR,
  DST_CODE, DST_DESCRIPTION,
  ISO_COUNTRY_CODE, UNHCR_COUNTRY_CODE, LOC_NAME_COUNTRY,
  ISO_ORIGIN_CODE, UNHCR_ORIGIN_CODE, LOC_NAME_ORIGIN,
  POP_START_VALUE, POP_START_STC_ID, POP_START_ITM_ID,
  POP_AH_START_VALUE, POP_AH_START_STC_ID, POP_AH_START_ITM_ID,
  ARR_GRP_VALUE, ARR_GRP_STC_ID, ARR_GRP_ITM_ID,
  ARR_IND_VALUE, ARR_IND_STC_ID, ARR_IND_ITM_ID,
  ARR_RESTL_VALUE, ARR_RESTL_STC_ID, ARR_RESTL_ITM_ID,
  BIRTH_VALUE, BIRTH_STC_ID, BIRTH_ITM_ID,
  REFOTHINC_VALUE, REFOTHINC_STC_ID, REFOTHINC_ITM_ID,
  case
    when coalesce(ARR_GRP_VALUE, ARR_IND_VALUE, ARR_RESTL_VALUE,
                  BIRTH_VALUE, REFOTHINC_VALUE) is not null
    then nvl(ARR_GRP_VALUE, 0) + nvl(ARR_IND_VALUE, 0) + nvl(ARR_RESTL_VALUE, 0) +
      nvl(BIRTH_VALUE, 0) + nvl(REFOTHINC_VALUE, 0)
  end TOTAL_INCREASE,
  VOLREP_VALUE, VOLREP_STC_ID, VOLREP_ITM_ID,
  VOLREP_AH_VALUE, VOLREP_AH_STC_ID, VOLREP_AH_ITM_ID,
  RESTL_VALUE, RESTL_STC_ID, RESTL_ITM_ID,
  RESTL_AH_VALUE, RESTL_AH_STC_ID, RESTL_AH_ITM_ID,
  CESSATION_VALUE, CESSATION_STC_ID, CESSATION_ITM_ID,
  NATURLZN_VALUE, NATURLZN_STC_ID, NATURLZN_ITM_ID,
  DEATH_VALUE, DEATH_STC_ID, DEATH_ITM_ID,
  REFOTHDEC_VALUE, REFOTHDEC_STC_ID, REFOTHDEC_ITM_ID,
  case
    when coalesce(VOLREP_VALUE, RESTL_VALUE, CESSATION_VALUE,
                  NATURLZN_VALUE, DEATH_VALUE, REFOTHDEC_VALUE) is not null
    then nvl(VOLREP_VALUE, 0) + nvl(RESTL_VALUE, 0) + nvl(CESSATION_VALUE, 0) +
      nvl(NATURLZN_VALUE, 0) + nvl(DEATH_VALUE, 0) + nvl(REFOTHDEC_VALUE, 0)
  end TOTAL_DECREASE,
  POP_END_VALUE, POP_END_STC_ID, POP_END_ITM_ID,
  POP_AH_END_VALUE, POP_AH_END_STC_ID, POP_AH_END_ITM_ID,
  SOURCE, BASIS
from UP_ASR_TABLE2
pivot
 (sum(VALUE) as VALUE, max(STC_ID) as STC_ID, max(ITM_ID) as ITM_ID
  for COLUMN_NAME
  in ('POP_START' as POP_START,
      'POP_AH_START' as POP_AH_START,
      'ARR_GRP' as ARR_GRP,
      'ARR_IND' as ARR_IND,
      'ARR_RESTL' as ARR_RESTL,
      'BIRTH' as BIRTH,
      'REFOTHINC' as REFOTHINC,
      'VOLREP' as VOLREP,
      'VOLREP_AH' as VOLREP_AH,
      'RESTL' as RESTL,
      'RESTL_AH' as RESTL_AH,
      'CESSATION' as CESSATION,
      'NATURLZN' as NATURLZN,
      'DEATH' as DEATH,
      'REFOTHDEC' as REFOTHDEC,
      'POP_END' as POP_END,
      'POP_AH_END' as POP_AH_END));
