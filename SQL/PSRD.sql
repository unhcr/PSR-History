-- Generated by Oracle SQL Developer Data Modeler 3.1.0.700
--   at:        2012-02-20 16:37:34 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE AGE_PROFILES 
    ( 
     CODE VARCHAR2 (10)  NOT NULL , 
     DISPLAY_SEQ NUMBER (5) , 
     ACTIVE_FLAG VARCHAR2 (1) DEFAULT 'Y'  NOT NULL CHECK ( ACTIVE_FLAG IN ('N', 'Y')) , 
     TXT_ID INTEGER  NOT NULL 
    ) 
;



ALTER TABLE AGE_PROFILES 
    ADD CONSTRAINT PK_AGP PRIMARY KEY ( CODE ) ;


ALTER TABLE AGE_PROFILES 
    ADD CONSTRAINT UK_AGP_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE AGE_RANGES 
    ( 
     AGP_CODE VARCHAR2 (10)  NOT NULL , 
     AGE_FROM NUMBER (3)  NOT NULL , 
     AGE_TO NUMBER (3)  NOT NULL , 
     TXT_ID INTEGER  NOT NULL 
    ) 
;



ALTER TABLE AGE_RANGES 
    ADD CONSTRAINT CH_AGR 
    CHECK (AGE_TO >= AGE_FROM)
;


ALTER TABLE AGE_RANGES 
    ADD CONSTRAINT PK_AGR PRIMARY KEY ( AGP_CODE, AGE_FROM ) ;


ALTER TABLE AGE_RANGES 
    ADD CONSTRAINT UK_AGR_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE COMPONENTS 
    ( 
     CODE VARCHAR2 (10)  NOT NULL , 
     MSG_SEQ_NBR_MAX INTEGER DEFAULT 0  NOT NULL , 
     DISPLAY_SEQ NUMBER (5) , 
     ACTIVE_FLAG VARCHAR2 (1) DEFAULT 'Y'  NOT NULL , 
     TXT_ID INTEGER  NOT NULL 
    ) 
;



ALTER TABLE COMPONENTS 
    ADD CONSTRAINT CH_COMP_MSG_SEQ_NBR_MAX 
    CHECK ( MSG_SEQ_NBR_MAX >= 0) 
;


ALTER TABLE COMPONENTS 
    ADD CONSTRAINT CH_COMP_ACTIVE_FLAG 
    CHECK ( ACTIVE_FLAG IN ('N', 'Y')) 
;


ALTER TABLE COMPONENTS 
    ADD CONSTRAINT PK_COMP PRIMARY KEY ( CODE ) ;


ALTER TABLE COMPONENTS 
    ADD CONSTRAINT UK_COMP_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE LANGUAGES 
    ( 
     CODE VARCHAR2 (6)  NOT NULL , 
     DISPLAY_SEQ NUMBER (5) , 
     ACTIVE_FLAG VARCHAR2 (1) DEFAULT 'Y'  NOT NULL , 
     TXT_ID INTEGER  NOT NULL 
    ) 
;



ALTER TABLE LANGUAGES 
    ADD CONSTRAINT CH_LANG_ACTIVE_FLAG 
    CHECK ( ACTIVE_FLAG in ('Y', 'N')) 
;


ALTER TABLE LANGUAGES 
    ADD CONSTRAINT PK_LANG PRIMARY KEY ( CODE ) ;


ALTER TABLE LANGUAGES 
    ADD CONSTRAINT UK_LANG_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE LOCATIONS 
    ( 
     CODE NUMBER (9)  NOT NULL , 
     LOCT_CODE VARCHAR2 (10)  NOT NULL , 
     COUNTRY_CODE VARCHAR2 (3) , 
     START_DATE DATE  NOT NULL , 
     END_DATE DATE  NOT NULL , 
     TXT_ID INTEGER  NOT NULL 
    ) 
;



ALTER TABLE LOCATIONS 
    ADD CONSTRAINT CH_LOC_DATES 
    CHECK (END_DATE >= START_DATE)
;

CREATE INDEX IX_LOC_COUNTRY_CODE ON LOCATIONS 
    ( 
     COUNTRY_CODE ASC 
    ) 
;

ALTER TABLE LOCATIONS 
    ADD CONSTRAINT PK_LOC PRIMARY KEY ( CODE ) ;


ALTER TABLE LOCATIONS 
    ADD CONSTRAINT UK_LOC_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE LOCATION_ATTRIBUTES 
    ( 
     LOC_CODE NUMBER (9)  NOT NULL , 
     LOCAT_CODE VARCHAR2 (10)  NOT NULL , 
     START_DATE DATE  NOT NULL , 
     END_DATE DATE  NOT NULL , 
     CHAR_VALUE VARCHAR2 (1000) , 
     NUM_VALUE NUMBER , 
     DATE_VALUE DATE , 
     TXT_ID INTEGER 
    ) 
;



ALTER TABLE LOCATION_ATTRIBUTES 
    ADD CONSTRAINT CH_LOCA_VALUE 
    CHECK ((CHAR_VALUE is not null and NUM_VALUE is null and DATE_VALUE is null) or
(CHAR_VALUE is null and NUM_VALUE is not null and DATE_VALUE is null) or
(CHAR_VALUE is null and NUM_VALUE is null and DATE_VALUE is not null))
;


ALTER TABLE LOCATION_ATTRIBUTES 
    ADD CONSTRAINT PK_LOCA PRIMARY KEY ( LOC_CODE, LOCAT_CODE, START_DATE ) ;


ALTER TABLE LOCATION_ATTRIBUTES 
    ADD CONSTRAINT UK_LOCA_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE LOCATION_ATTRIBUTE_TYPES 
    ( 
     CODE VARCHAR2 (10)  NOT NULL , 
     DISPLAY_SEQ NUMBER (5) , 
     ACTIVE_FLAG VARCHAR2 (1) DEFAULT 'Y'  NOT NULL CHECK ( ACTIVE_FLAG IN ('N', 'Y')) , 
     TXT_ID INTEGER  NOT NULL 
    ) 
;



ALTER TABLE LOCATION_ATTRIBUTE_TYPES 
    ADD CONSTRAINT PK_LOCAT PRIMARY KEY ( CODE ) ;


ALTER TABLE LOCATION_ATTRIBUTE_TYPES 
    ADD CONSTRAINT UK_LOCAT_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE LOCATION_RELATIONSHIPS 
    ( 
     LOC_CODE_PARENT NUMBER (9)  NOT NULL , 
     LOC_CODE_CHILD NUMBER (9)  NOT NULL , 
     LOCRT_CODE VARCHAR2 (10)  NOT NULL , 
     START_DATE DATE  NOT NULL , 
     END_DATE DATE  NOT NULL , 
     TXT_ID INTEGER 
    ) 
;



ALTER TABLE LOCATION_RELATIONSHIPS 
    ADD CONSTRAINT PK_LOCR PRIMARY KEY ( LOC_CODE_PARENT, LOC_CODE_CHILD, LOCRT_CODE, START_DATE ) ;


ALTER TABLE LOCATION_RELATIONSHIPS 
    ADD CONSTRAINT UK_LOCR_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE LOCATION_RELATIONSHIP_TYPES 
    ( 
     CODE VARCHAR2 (10)  NOT NULL , 
     DISPLAY_SEQ NUMBER (5) , 
     ACTIVE_FLAG VARCHAR2 (1) DEFAULT 'Y'  NOT NULL CHECK ( ACTIVE_FLAG IN ('N', 'Y')) , 
     TXT_ID INTEGER  NOT NULL 
    ) 
;



ALTER TABLE LOCATION_RELATIONSHIP_TYPES 
    ADD CONSTRAINT CH_LOCRT_CODE 
    CHECK (CODE = upper(CODE))
;


ALTER TABLE LOCATION_RELATIONSHIP_TYPES 
    ADD CONSTRAINT PK_LOCRT PRIMARY KEY ( CODE ) ;


ALTER TABLE LOCATION_RELATIONSHIP_TYPES 
    ADD CONSTRAINT UK_LOCRT_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE LOCATION_TYPES 
    ( 
     CODE VARCHAR2 (10)  NOT NULL , 
     DISPLAY_SEQ NUMBER (5) , 
     ACTIVE_FLAG VARCHAR2 (1) DEFAULT 'Y'  NOT NULL CHECK ( ACTIVE_FLAG IN ('N', 'Y')) , 
     TXT_ID INTEGER  NOT NULL 
    ) 
;



ALTER TABLE LOCATION_TYPES 
    ADD CONSTRAINT PK_LOCT PRIMARY KEY ( CODE ) ;


ALTER TABLE LOCATION_TYPES 
    ADD CONSTRAINT UK_LOCT_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE MESSAGES 
    ( 
     COMP_CODE VARCHAR2 (10)  NOT NULL , 
     SEQ_NBR INTEGER  NOT NULL , 
     SEVERITY VARCHAR2 (1) DEFAULT 'E'  NOT NULL , 
     TXT_ID INTEGER  NOT NULL 
    ) 
;



ALTER TABLE MESSAGES 
    ADD CONSTRAINT CH_MSG_SEQ_NBR 
    CHECK ( SEQ_NBR > 0) 
;


ALTER TABLE MESSAGES 
    ADD CONSTRAINT CH_MSG_SEVERITY 
    CHECK ( SEVERITY IN ('E', 'I', 'S', 'W')) 
;


ALTER TABLE MESSAGES 
    ADD CONSTRAINT PK_MSG PRIMARY KEY ( COMP_CODE, SEQ_NBR ) ;


ALTER TABLE MESSAGES 
    ADD CONSTRAINT UK_MSG_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE POPULATION_CATEGORIES 
    ( 
     CODE VARCHAR2 (10)  NOT NULL , 
     DISPLAY_SEQ NUMBER (5) , 
     ACTIVE_FLAG VARCHAR2 (1) DEFAULT 'Y'  NOT NULL CHECK ( ACTIVE_FLAG IN ('N', 'Y')) , 
     TXT_ID INTEGER  NOT NULL 
    ) 
;



ALTER TABLE POPULATION_CATEGORIES 
    ADD CONSTRAINT PK_POPC PRIMARY KEY ( CODE ) ;


ALTER TABLE POPULATION_CATEGORIES 
    ADD CONSTRAINT UK_POPC_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE POPULATION_PLANNING_GROUPS 
    ( 
     LOC_CODE NUMBER (9)  NOT NULL , 
     PPG_CODE VARCHAR2 (5)  NOT NULL , 
     START_DATE DATE  NOT NULL , 
     END_DATE DATE  NOT NULL , 
     TXT_ID INTEGER  NOT NULL 
    ) 
;



ALTER TABLE POPULATION_PLANNING_GROUPS 
    ADD CONSTRAINT CH_PPG_DATES 
    CHECK (END_DATE >= START_DATE)
;


ALTER TABLE POPULATION_PLANNING_GROUPS 
    ADD CONSTRAINT PK_PPG PRIMARY KEY ( LOC_CODE, PPG_CODE, START_DATE ) ;


ALTER TABLE POPULATION_PLANNING_GROUPS 
    ADD CONSTRAINT UK_PPG_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE STATISTICS 
    ( 
     ID INTEGER  NOT NULL , 
     STCT_CODE VARCHAR2 (10)  NOT NULL , 
     LOC_CODE NUMBER (9)  NOT NULL , 
     LOC_CODE_COUNTRY_OF_ASYLUM NUMBER (9)  NOT NULL , 
     COUNTRY_CODE_ASYLUM VARCHAR2 (3)  NOT NULL , 
     LOC_CODE_COUNTRY_OF_ORIGIN NUMBER (9) , 
     COUNTRY_CODE_ORIGIN VARCHAR2 (3) , 
     LOC_CODE_PPG NUMBER (9) , 
     PPG_CODE VARCHAR2 (5) , 
     PPG_START_DATE DATE , 
     POPC_CODE VARCHAR2 (10) , 
     PER_ID INTEGER , 
     SEX VARCHAR2 (1) CHECK ( SEX IN ('F', 'M')) , 
     AGP_CODE VARCHAR2 (10) , 
     AGE_FROM NUMBER (3) , 
     AGE_TO NUMBER (3) , 
     STB_ID INTEGER , 
     VALUE INTEGER  NOT NULL , 
     TXT_ID INTEGER 
    ) 
;



ALTER TABLE STATISTICS 
    ADD CONSTRAINT PK_STC PRIMARY KEY ( ID ) ;


ALTER TABLE STATISTICS 
    ADD CONSTRAINT UK_STC UNIQUE ( STCT_CODE , LOC_CODE , LOC_CODE_COUNTRY_OF_ASYLUM , LOC_CODE_COUNTRY_OF_ORIGIN , LOC_CODE_PPG , PPG_CODE , PPG_START_DATE , POPC_CODE , PER_ID , SEX , AGP_CODE , AGE_FROM , AGE_TO ) ;


ALTER TABLE STATISTICS 
    ADD CONSTRAINT UK_STC_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE STATISTICS_BATCHES 
    ( 
     ID INTEGER  NOT NULL , 
     DESCRIPTION VARCHAR2 (1000)  NOT NULL , 
     STATUS VARCHAR2 (10) , 
     PROVENANCE VARCHAR2 (100) 
    ) 
;



ALTER TABLE STATISTICS_BATCHES 
    ADD CONSTRAINT PK_STB PRIMARY KEY ( ID ) ;



CREATE TABLE STATISTIC_GROUPS 
    ( 
     CODE VARCHAR2 (10)  NOT NULL , 
     DISPLAY_SEQ NUMBER (5) , 
     ACTIVE_FLAG VARCHAR2 (1) DEFAULT 'Y'  NOT NULL CHECK ( ACTIVE_FLAG IN ('N', 'Y')) , 
     TXT_ID INTEGER  NOT NULL 
    ) 
;



ALTER TABLE STATISTIC_GROUPS 
    ADD CONSTRAINT PK_STCG PRIMARY KEY ( CODE ) ;


ALTER TABLE STATISTIC_GROUPS 
    ADD CONSTRAINT UK_STCG_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE STATISTIC_TYPES 
    ( 
     CODE VARCHAR2 (10)  NOT NULL , 
     ORDER_SEQ NUMBER (5) , 
     ACTIVE_FLAG VARCHAR2 (1) DEFAULT 'Y'  NOT NULL CHECK ( ACTIVE_FLAG IN ('N', 'Y')) , 
     TXT_ID INTEGER  NOT NULL 
    ) 
;



ALTER TABLE STATISTIC_TYPES 
    ADD CONSTRAINT PK_STCT PRIMARY KEY ( CODE ) ;


ALTER TABLE STATISTIC_TYPES 
    ADD CONSTRAINT UK_STCT_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE STATISTIC_TYPES_IN_GROUPS 
    ( 
     STCG_CODE VARCHAR2 (10)  NOT NULL , 
     STCT_CODE VARCHAR2 (10)  NOT NULL , 
     TXT_ID INTEGER 
    ) 
;



ALTER TABLE STATISTIC_TYPES_IN_GROUPS 
    ADD CONSTRAINT PK_STCTG PRIMARY KEY ( STCG_CODE, STCT_CODE ) ;


ALTER TABLE STATISTIC_TYPES_IN_GROUPS 
    ADD CONSTRAINT UK_STCTG_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE SYSTEM_PARAMETERS 
    ( 
     CODE VARCHAR2 (30)  NOT NULL , 
     DATA_TYPE VARCHAR2 (1)  NOT NULL , 
     CHAR_VALUE VARCHAR2 (1000) , 
     NUM_VALUE NUMBER , 
     DATE_VALUE DATE , 
     TXT_ID INTEGER 
    ) 
;



ALTER TABLE SYSTEM_PARAMETERS 
    ADD CONSTRAINT CH_SYP_DATA_TYPE 
    CHECK ((DATA_TYPE = 'C' and CHAR_VALUE is not null and NUM_VALUE is null and DATE_VALUE is null) or
(DATA_TYPE = 'N' and CHAR_VALUE is null and NUM_VALUE is not null and DATE_VALUE is null) or
(DATA_TYPE = 'D' and CHAR_VALUE is null and NUM_VALUE is null and DATE_VALUE is not null))
;


ALTER TABLE SYSTEM_PARAMETERS 
    ADD CONSTRAINT PK_SYP PRIMARY KEY ( CODE ) ;


ALTER TABLE SYSTEM_PARAMETERS 
    ADD CONSTRAINT UK_SYP_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE SYSTEM_USERS 
    ( 
     USERID VARCHAR2 (30)  NOT NULL , 
     LOCKED_FLAG VARCHAR2 (1) DEFAULT 'N'  NOT NULL , 
     TEMPLATE_FLAG VARCHAR2 (1) DEFAULT 'N'  NOT NULL , 
     TXT_ID INTEGER  NOT NULL 
    ) 
;



ALTER TABLE SYSTEM_USERS 
    ADD CONSTRAINT CH_USR_LOCKED_FLAG 
    CHECK ( LOCKED_FLAG IN ('N', 'Y')) 
;


ALTER TABLE SYSTEM_USERS 
    ADD CONSTRAINT CH_USR_TEMPLATE_FLAG 
    CHECK ( TEMPLATE_FLAG IN ('N', 'Y')) 
;


ALTER TABLE SYSTEM_USERS 
    ADD CONSTRAINT PK_USR PRIMARY KEY ( USERID ) ;


ALTER TABLE SYSTEM_USERS 
    ADD CONSTRAINT UK_USR_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE TABLE_ALIASES 
    ( 
     ALIAS VARCHAR2 (10)  NOT NULL , 
     TABLE_NAME VARCHAR2 (30)  NOT NULL , 
     TXT_ID INTEGER 
    ) 
;



ALTER TABLE TABLE_ALIASES 
    ADD CONSTRAINT PK_TAB PRIMARY KEY ( ALIAS ) ;


ALTER TABLE TABLE_ALIASES 
    ADD CONSTRAINT UK_TAB_TABLE_NAME UNIQUE ( TABLE_NAME ) ;


ALTER TABLE TABLE_ALIASES 
    ADD CONSTRAINT UK_TAB_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE TEXT_HEADERS 
    ( 
     ID INTEGER  NOT NULL , 
     TAB_ALIAS VARCHAR2 (10)  NOT NULL 
    ) 
;



ALTER TABLE TEXT_HEADERS 
    ADD CONSTRAINT PK_TXT PRIMARY KEY ( ID ) ;



CREATE TABLE TEXT_ITEMS 
    ( 
     TXT_ID INTEGER  NOT NULL , 
     TXTT_CODE VARCHAR2 (10)  NOT NULL , 
     SEQ_NBR INTEGER  NOT NULL , 
     LANG_CODE VARCHAR2 (6)  NOT NULL , 
     TEXT VARCHAR2 (1000) , 
     LONG_TEXT CLOB 
    ) 
;



ALTER TABLE TEXT_ITEMS 
    ADD CONSTRAINT CH_TXI_SEQ_NBR 
    CHECK ( SEQ_NBR > 0) 
;


ALTER TABLE TEXT_ITEMS 
    ADD CONSTRAINT CH_TXI_TEXT 
    CHECK ((TEXT is not null and LONG_TEXT is null) or
(TEXT is null and LONG_TEXT is not null))
;


ALTER TABLE TEXT_ITEMS 
    ADD CONSTRAINT PK_TXI PRIMARY KEY ( TXT_ID, TXTT_CODE, SEQ_NBR, LANG_CODE ) ;



CREATE TABLE TEXT_TYPES 
    ( 
     CODE VARCHAR2 (10)  NOT NULL , 
     DISPLAY_SEQ NUMBER (5) , 
     ACTIVE_FLAG VARCHAR2 (1) DEFAULT 'Y'  NOT NULL , 
     TXT_ID INTEGER  NOT NULL 
    ) 
;



ALTER TABLE TEXT_TYPES 
    ADD CONSTRAINT CH_TXTT_ACTIVE_FLAG 
    CHECK ( ACTIVE_FLAG IN ('N', 'Y')) 
;


ALTER TABLE TEXT_TYPES 
    ADD CONSTRAINT PK_TXTT PRIMARY KEY ( CODE ) ;


ALTER TABLE TEXT_TYPES 
    ADD CONSTRAINT UK_TXTT_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE TEXT_TYPE_HEADERS 
    ( 
     TXT_ID INTEGER  NOT NULL , 
     TXTT_CODE VARCHAR2 (10)  NOT NULL , 
     TAB_ALIAS VARCHAR2 (10)  NOT NULL , 
     TXI_SEQ_NBR_MAX INTEGER DEFAULT 0  NOT NULL 
    ) 
;



ALTER TABLE TEXT_TYPE_HEADERS 
    ADD CONSTRAINT CH_TTH_TXI_SEQ_NBR_MAX 
    CHECK ( TXI_SEQ_NBR_MAX >= 0) 
;

CREATE INDEX IX_TTH_TTP ON TEXT_TYPE_HEADERS 
    ( 
     TXTT_CODE ASC , 
     TAB_ALIAS ASC 
    ) 
;

ALTER TABLE TEXT_TYPE_HEADERS 
    ADD CONSTRAINT PK_TTH PRIMARY KEY ( TXT_ID, TXTT_CODE ) ;



CREATE TABLE TEXT_TYPE_PROPERTIES 
    ( 
     TXTT_CODE VARCHAR2 (10)  NOT NULL , 
     TAB_ALIAS VARCHAR2 (10)  NOT NULL , 
     MANDATORY VARCHAR2 (1) DEFAULT 'N'  NOT NULL , 
     MULTI_INSTANCE VARCHAR2 (1) DEFAULT 'Y'  NOT NULL , 
     TXT_ID INTEGER 
    ) 
;



ALTER TABLE TEXT_TYPE_PROPERTIES 
    ADD CONSTRAINT CH_TTP_MANDATORY 
    CHECK ( MANDATORY IN ('N', 'Y')) 
;


ALTER TABLE TEXT_TYPE_PROPERTIES 
    ADD CONSTRAINT CH_TTP_MULTI_INSTANCE 
    CHECK ( MULTI_INSTANCE IN ('N', 'Y')) 
;


COMMENT ON COLUMN TEXT_TYPE_PROPERTIES.MANDATORY IS 'Is a text item of this type mandatory for all rows of this table?' 
;

COMMENT ON COLUMN TEXT_TYPE_PROPERTIES.MULTI_INSTANCE IS 'Can there be multiple instances of text values of this type for a rwo in this table?' 
;

ALTER TABLE TEXT_TYPE_PROPERTIES 
    ADD CONSTRAINT PK_TTP PRIMARY KEY ( TXTT_CODE, TAB_ALIAS ) ;


ALTER TABLE TEXT_TYPE_PROPERTIES 
    ADD CONSTRAINT UK_TTP_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE TIME_PERIODS 
    ( 
     ID INTEGER  NOT NULL , 
     START_DATE DATE  NOT NULL , 
     END_DATE DATE  NOT NULL , 
     PERT_CODE VARCHAR2 (10)  NOT NULL , 
     PER_ID_PARENT INTEGER , 
     TXT_ID INTEGER 
    ) 
;



ALTER TABLE TIME_PERIODS 
    ADD CONSTRAINT CH_PER_DATES 
    CHECK (END_DATE >= START_DATE)
;

CREATE INDEX IX_PER_PARENT ON TIME_PERIODS 
    ( 
     PER_ID_PARENT ASC 
    ) 
;

ALTER TABLE TIME_PERIODS 
    ADD CONSTRAINT PK_PER PRIMARY KEY ( ID ) ;


ALTER TABLE TIME_PERIODS 
    ADD CONSTRAINT UK_PER_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE TIME_PERIOD_TYPES 
    ( 
     CODE VARCHAR2 (10)  NOT NULL , 
     DISPLAY_SEQ NUMBER (5) , 
     ACTIVE_FLAG VARCHAR2 (1) DEFAULT 'Y'  NOT NULL CHECK ( ACTIVE_FLAG IN ('N', 'Y')) , 
     TXT_ID INTEGER  NOT NULL 
    ) 
;



ALTER TABLE TIME_PERIOD_TYPES 
    ADD CONSTRAINT PK_PERT PRIMARY KEY ( CODE ) ;


ALTER TABLE TIME_PERIOD_TYPES 
    ADD CONSTRAINT UK_PERT_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE USER_ATTRIBUTES 
    ( 
     USERID VARCHAR2 (30)  NOT NULL , 
     UATT_CODE VARCHAR2 (10)  NOT NULL , 
     CHAR_VALUE VARCHAR2 (1000) , 
     NUM_VALUE NUMBER , 
     DATE_VALUE DATE , 
     TXT_ID INTEGER 
    ) 
;



ALTER TABLE USER_ATTRIBUTES 
    ADD CONSTRAINT CH_UAT_VALUE 
    CHECK ((CHAR_VALUE is not null and NUM_VALUE is null and DATE_VALUE is null) or
(CHAR_VALUE is null and NUM_VALUE is not null and DATE_VALUE is null) or
(CHAR_VALUE is null and NUM_VALUE is null and DATE_VALUE is not null))
;


ALTER TABLE USER_ATTRIBUTES 
    ADD CONSTRAINT PK_UAT PRIMARY KEY ( USERID, UATT_CODE ) ;


ALTER TABLE USER_ATTRIBUTES 
    ADD CONSTRAINT UK_UAT_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE USER_ATTRIBUTE_TYPES 
    ( 
     CODE VARCHAR2 (10)  NOT NULL , 
     DATA_TYPE VARCHAR2 (1)  NOT NULL , 
     DISPLAY_SEQ NUMBER (5) , 
     ACTIVE_FLAG VARCHAR2 (1) DEFAULT 'Y'  NOT NULL , 
     TXT_ID INTEGER  NOT NULL 
    ) 
;



ALTER TABLE USER_ATTRIBUTE_TYPES 
    ADD CONSTRAINT CH_UATT_DATA_TYPE 
    CHECK ( DATA_TYPE IN ('C', 'D', 'N')) 
;


ALTER TABLE USER_ATTRIBUTE_TYPES 
    ADD CONSTRAINT CH_UATT_ACTIVE_FLAG 
    CHECK ( ACTIVE_FLAG IN ('N', 'Y')) 
;


ALTER TABLE USER_ATTRIBUTE_TYPES 
    ADD CONSTRAINT PK_UATT PRIMARY KEY ( CODE ) ;


ALTER TABLE USER_ATTRIBUTE_TYPES 
    ADD CONSTRAINT UK_UATT_TXT_ID UNIQUE ( TXT_ID ) ;



CREATE TABLE USER_LANGUAGE_PREFERENCES 
    ( 
     USERID VARCHAR2 (30)  NOT NULL , 
     LANG_CODE VARCHAR2 (6)  NOT NULL , 
     PREF_SEQ NUMBER (5)  NOT NULL 
    ) 
;


CREATE INDEX IX_ULP_LANG_CODE ON USER_LANGUAGE_PREFERENCES 
    ( 
     LANG_CODE ASC 
    ) 
;

ALTER TABLE USER_LANGUAGE_PREFERENCES 
    ADD CONSTRAINT PK_ULP PRIMARY KEY ( USERID, LANG_CODE ) ;


ALTER TABLE USER_LANGUAGE_PREFERENCES 
    ADD CONSTRAINT UK_ULP_PREF_SEQ UNIQUE ( USERID , PREF_SEQ ) ;




ALTER TABLE AGE_PROFILES 
    ADD CONSTRAINT FK_AGP_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
;


ALTER TABLE AGE_RANGES 
    ADD CONSTRAINT FK_AGR_AGP FOREIGN KEY 
    ( 
     AGP_CODE
    ) 
    REFERENCES AGE_PROFILES 
    ( 
     CODE
    ) 
;


ALTER TABLE AGE_RANGES 
    ADD CONSTRAINT FK_AGR_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
;


ALTER TABLE COMPONENTS 
    ADD CONSTRAINT FK_COMP_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
;


ALTER TABLE LANGUAGES 
    ADD CONSTRAINT FK_LANG_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
;


ALTER TABLE LOCATION_ATTRIBUTE_TYPES 
    ADD CONSTRAINT FK_LOCAT_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
;


ALTER TABLE LOCATION_ATTRIBUTES 
    ADD CONSTRAINT FK_LOCA_LOC FOREIGN KEY 
    ( 
     LOC_CODE
    ) 
    REFERENCES LOCATIONS 
    ( 
     CODE
    ) 
;


ALTER TABLE LOCATION_ATTRIBUTES 
    ADD CONSTRAINT FK_LOCA_LOCAT FOREIGN KEY 
    ( 
     LOCAT_CODE
    ) 
    REFERENCES LOCATION_ATTRIBUTE_TYPES 
    ( 
     CODE
    ) 
;


ALTER TABLE LOCATION_ATTRIBUTES 
    ADD CONSTRAINT FK_LOCA_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
    ON DELETE SET NULL 
;


ALTER TABLE LOCATION_RELATIONSHIP_TYPES 
    ADD CONSTRAINT FK_LOCRT_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
;


ALTER TABLE LOCATION_RELATIONSHIPS 
    ADD CONSTRAINT FK_LOCR_LOCRT FOREIGN KEY 
    ( 
     LOCRT_CODE
    ) 
    REFERENCES LOCATION_RELATIONSHIP_TYPES 
    ( 
     CODE
    ) 
;


ALTER TABLE LOCATION_RELATIONSHIPS 
    ADD CONSTRAINT FK_LOCR_LOC_CHILD FOREIGN KEY 
    ( 
     LOC_CODE_CHILD
    ) 
    REFERENCES LOCATIONS 
    ( 
     CODE
    ) 
;


ALTER TABLE LOCATION_RELATIONSHIPS 
    ADD CONSTRAINT FK_LOCR_LOC_PARENT FOREIGN KEY 
    ( 
     LOC_CODE_PARENT
    ) 
    REFERENCES LOCATIONS 
    ( 
     CODE
    ) 
;


ALTER TABLE LOCATION_RELATIONSHIPS 
    ADD CONSTRAINT FK_LOCR_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
    ON DELETE SET NULL 
;


ALTER TABLE LOCATION_TYPES 
    ADD CONSTRAINT FK_LOCT_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
;


ALTER TABLE LOCATIONS 
    ADD CONSTRAINT FK_LOC_LOCT FOREIGN KEY 
    ( 
     LOCT_CODE
    ) 
    REFERENCES LOCATION_TYPES 
    ( 
     CODE
    ) 
;


ALTER TABLE LOCATIONS 
    ADD CONSTRAINT FK_LOC_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
;


ALTER TABLE MESSAGES 
    ADD CONSTRAINT FK_MSG_COMP FOREIGN KEY 
    ( 
     COMP_CODE
    ) 
    REFERENCES COMPONENTS 
    ( 
     CODE
    ) 
;


ALTER TABLE MESSAGES 
    ADD CONSTRAINT FK_MSG_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
;


ALTER TABLE TIME_PERIOD_TYPES 
    ADD CONSTRAINT FK_PERT_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
;


ALTER TABLE TIME_PERIODS 
    ADD CONSTRAINT FK_PER_PER FOREIGN KEY 
    ( 
     PER_ID_PARENT
    ) 
    REFERENCES TIME_PERIODS 
    ( 
     ID
    ) 
    ON DELETE SET NULL 
;


ALTER TABLE TIME_PERIODS 
    ADD CONSTRAINT FK_PER_PERT FOREIGN KEY 
    ( 
     PERT_CODE
    ) 
    REFERENCES TIME_PERIOD_TYPES 
    ( 
     CODE
    ) 
;


ALTER TABLE TIME_PERIODS 
    ADD CONSTRAINT FK_PER_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
    ON DELETE SET NULL 
;


ALTER TABLE POPULATION_CATEGORIES 
    ADD CONSTRAINT FK_POPC_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
;


ALTER TABLE POPULATION_PLANNING_GROUPS 
    ADD CONSTRAINT FK_PPG_LOC FOREIGN KEY 
    ( 
     LOC_CODE
    ) 
    REFERENCES LOCATIONS 
    ( 
     CODE
    ) 
;


ALTER TABLE POPULATION_PLANNING_GROUPS 
    ADD CONSTRAINT FK_PPG_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
;


ALTER TABLE STATISTIC_GROUPS 
    ADD CONSTRAINT FK_STCG_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
;


ALTER TABLE STATISTIC_TYPES_IN_GROUPS 
    ADD CONSTRAINT FK_STCTG_STCG FOREIGN KEY 
    ( 
     STCG_CODE
    ) 
    REFERENCES STATISTIC_GROUPS 
    ( 
     CODE
    ) 
;


ALTER TABLE STATISTIC_TYPES_IN_GROUPS 
    ADD CONSTRAINT FK_STCTG_STCT FOREIGN KEY 
    ( 
     STCT_CODE
    ) 
    REFERENCES STATISTIC_TYPES 
    ( 
     CODE
    ) 
;


ALTER TABLE STATISTIC_TYPES_IN_GROUPS 
    ADD CONSTRAINT FK_STCTG_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
;


ALTER TABLE STATISTIC_TYPES 
    ADD CONSTRAINT FK_STCT_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
;


ALTER TABLE STATISTICS 
    ADD CONSTRAINT FK_STC_AGR FOREIGN KEY 
    ( 
     AGP_CODE,
     AGE_FROM
    ) 
    REFERENCES AGE_RANGES 
    ( 
     AGP_CODE,
     AGE_FROM
    ) 
;


ALTER TABLE STATISTICS 
    ADD CONSTRAINT FK_STC_LOC FOREIGN KEY 
    ( 
     LOC_CODE
    ) 
    REFERENCES LOCATIONS 
    ( 
     CODE
    ) 
;


ALTER TABLE STATISTICS 
    ADD CONSTRAINT FK_STC_LOC_COUNTRY_OF_ASYLUM FOREIGN KEY 
    ( 
     LOC_CODE_COUNTRY_OF_ASYLUM
    ) 
    REFERENCES LOCATIONS 
    ( 
     CODE
    ) 
;


ALTER TABLE STATISTICS 
    ADD CONSTRAINT FK_STC_LOC_COUNTRY_OF_ORIGIN FOREIGN KEY 
    ( 
     LOC_CODE_COUNTRY_OF_ORIGIN
    ) 
    REFERENCES LOCATIONS 
    ( 
     CODE
    ) 
;


ALTER TABLE STATISTICS 
    ADD CONSTRAINT FK_STC_PER FOREIGN KEY 
    ( 
     PER_ID
    ) 
    REFERENCES TIME_PERIODS 
    ( 
     ID
    ) 
;


ALTER TABLE STATISTICS 
    ADD CONSTRAINT FK_STC_POPC FOREIGN KEY 
    ( 
     POPC_CODE
    ) 
    REFERENCES POPULATION_CATEGORIES 
    ( 
     CODE
    ) 
;


ALTER TABLE STATISTICS 
    ADD CONSTRAINT FK_STC_PPG FOREIGN KEY 
    ( 
     LOC_CODE_PPG,
     PPG_CODE,
     PPG_START_DATE
    ) 
    REFERENCES POPULATION_PLANNING_GROUPS 
    ( 
     LOC_CODE,
     PPG_CODE,
     START_DATE
    ) 
;


ALTER TABLE STATISTICS 
    ADD CONSTRAINT FK_STC_STB FOREIGN KEY 
    ( 
     STB_ID
    ) 
    REFERENCES STATISTICS_BATCHES 
    ( 
     ID
    ) 
;


ALTER TABLE STATISTICS 
    ADD CONSTRAINT FK_STC_STCT FOREIGN KEY 
    ( 
     STCT_CODE
    ) 
    REFERENCES STATISTIC_TYPES 
    ( 
     CODE
    ) 
;


ALTER TABLE STATISTICS 
    ADD CONSTRAINT FK_STC_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
    ON DELETE SET NULL 
;


ALTER TABLE SYSTEM_PARAMETERS 
    ADD CONSTRAINT FK_SYP_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
    ON DELETE SET NULL 
;


ALTER TABLE TABLE_ALIASES 
    ADD CONSTRAINT FK_TAB_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
    ON DELETE SET NULL 
;


ALTER TABLE TEXT_TYPE_HEADERS 
    ADD CONSTRAINT FK_TTH_TTP FOREIGN KEY 
    ( 
     TXTT_CODE,
     TAB_ALIAS
    ) 
    REFERENCES TEXT_TYPE_PROPERTIES 
    ( 
     TXTT_CODE,
     TAB_ALIAS
    ) 
;


ALTER TABLE TEXT_TYPE_HEADERS 
    ADD CONSTRAINT FK_TTH_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
    ON DELETE CASCADE 
;


ALTER TABLE TEXT_TYPE_HEADERS 
    ADD CONSTRAINT FK_TTH_TXTT FOREIGN KEY 
    ( 
     TXTT_CODE
    ) 
    REFERENCES TEXT_TYPES 
    ( 
     CODE
    ) 
;


ALTER TABLE TEXT_TYPE_PROPERTIES 
    ADD CONSTRAINT FK_TTP_TAB FOREIGN KEY 
    ( 
     TAB_ALIAS
    ) 
    REFERENCES TABLE_ALIASES 
    ( 
     ALIAS
    ) 
;


ALTER TABLE TEXT_TYPE_PROPERTIES 
    ADD CONSTRAINT FK_TTP_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
    ON DELETE SET NULL 
;


ALTER TABLE TEXT_TYPE_PROPERTIES 
    ADD CONSTRAINT FK_TTP_TXTT FOREIGN KEY 
    ( 
     TXTT_CODE
    ) 
    REFERENCES TEXT_TYPES 
    ( 
     CODE
    ) 
    ON DELETE CASCADE 
;


ALTER TABLE TEXT_ITEMS 
    ADD CONSTRAINT FK_TXI_LANG FOREIGN KEY 
    ( 
     LANG_CODE
    ) 
    REFERENCES LANGUAGES 
    ( 
     CODE
    ) 
;


ALTER TABLE TEXT_ITEMS 
    ADD CONSTRAINT FK_TXI_TTH FOREIGN KEY 
    ( 
     TXT_ID,
     TXTT_CODE
    ) 
    REFERENCES TEXT_TYPE_HEADERS 
    ( 
     TXT_ID,
     TXTT_CODE
    ) 
    ON DELETE CASCADE 
;


ALTER TABLE TEXT_TYPES 
    ADD CONSTRAINT FK_TXTT_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
;


ALTER TABLE TEXT_HEADERS 
    ADD CONSTRAINT FK_TXT_TAB FOREIGN KEY 
    ( 
     TAB_ALIAS
    ) 
    REFERENCES TABLE_ALIASES 
    ( 
     ALIAS
    ) 
;


ALTER TABLE USER_ATTRIBUTE_TYPES 
    ADD CONSTRAINT FK_UATT_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
;


ALTER TABLE USER_ATTRIBUTES 
    ADD CONSTRAINT FK_UAT_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
    ON DELETE SET NULL 
;


ALTER TABLE USER_ATTRIBUTES 
    ADD CONSTRAINT FK_UAT_UATT FOREIGN KEY 
    ( 
     UATT_CODE
    ) 
    REFERENCES USER_ATTRIBUTE_TYPES 
    ( 
     CODE
    ) 
;


ALTER TABLE USER_ATTRIBUTES 
    ADD CONSTRAINT FK_UAT_USR FOREIGN KEY 
    ( 
     USERID
    ) 
    REFERENCES SYSTEM_USERS 
    ( 
     USERID
    ) 
    ON DELETE CASCADE 
;


ALTER TABLE USER_LANGUAGE_PREFERENCES 
    ADD CONSTRAINT FK_ULP_LANG FOREIGN KEY 
    ( 
     LANG_CODE
    ) 
    REFERENCES LANGUAGES 
    ( 
     CODE
    ) 
;


ALTER TABLE USER_LANGUAGE_PREFERENCES 
    ADD CONSTRAINT FK_ULP_USR FOREIGN KEY 
    ( 
     USERID
    ) 
    REFERENCES SYSTEM_USERS 
    ( 
     USERID
    ) 
    ON DELETE CASCADE 
;


ALTER TABLE SYSTEM_USERS 
    ADD CONSTRAINT FK_USR_TXT FOREIGN KEY 
    ( 
     TXT_ID
    ) 
    REFERENCES TEXT_HEADERS 
    ( 
     ID
    ) 
    ON DELETE CASCADE 
;

CREATE OR REPLACE VIEW L_COMPONENTS AS
SELECT CODE,
  DESCRIPTION,
  LANG_CODE,
  MSG_SEQ_NBR_MAX,
  DISPLAY_SEQ,
  ACTIVE_FLAG,
  TXT_ID
FROM
  (SELECT CODE,
    DESCRIPTION,
    LANG_CODE,
    MSG_SEQ_NBR_MAX,
    DISPLAY_SEQ,
    ACTIVE_FLAG,
    TXT_ID,
    ROW_NUMBER,
    rank() OVER (PARTITION BY CODE ORDER BY ROW_NUMBER DESC) RANK
  FROM
    (SELECT COMP.CODE,
      TXI.TEXT DESCRIPTION,
      TXI.LANG_CODE,
      COMP.MSG_SEQ_NBR_MAX,
      COMP.DISPLAY_SEQ,
      COMP.ACTIVE_FLAG,
      COMP.TXT_ID,
      row_number() OVER (PARTITION BY COMP.CODE ORDER BY ULP.PREF_SEQ DESC) ROW_NUMBER
    FROM COMPONENTS COMP
    INNER JOIN USER_LANGUAGE_PREFERENCES ULP
    ON ULP.USERID = sys_context('PSR', 'USERID')
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = COMP.TXT_ID
    AND TXI.LANG_CODE = ULP.LANG_CODE
    AND TXI.TXTT_CODE = 'DESCR'
    AND TXI.SEQ_NBR   = 1
    UNION ALL
    SELECT COMP.CODE,
      TXI.TEXT DESCRIPTION,
      TXI.LANG_CODE,
      COMP.MSG_SEQ_NBR_MAX,
      COMP.DISPLAY_SEQ,
      COMP.ACTIVE_FLAG,
      COMP.TXT_ID,
      0 ROW_NUMBER
    FROM COMPONENTS COMP
    INNER JOIN SYSTEM_PARAMETERS SYP
    ON SYP.CODE = 'FALLBACK LANGUAGE'
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = COMP.TXT_ID
    AND TXI.LANG_CODE = SYP.CHAR_VALUE
    AND TXI.TXTT_CODE = 'DESCR'
    AND TXI.SEQ_NBR   = 1
    UNION ALL
    SELECT COMP.CODE,
      TXI.TEXT DESCRIPTION,
      TXI.LANG_CODE,
      COMP.MSG_SEQ_NBR_MAX,
      COMP.DISPLAY_SEQ,
      COMP.ACTIVE_FLAG,
      COMP.TXT_ID,
      -row_number() OVER (PARTITION BY COMP.CODE ORDER BY 1) ROW_NUMBER
    FROM COMPONENTS COMP
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = COMP.TXT_ID
    AND TXI.TXTT_CODE = 'DESCR'
    AND TXI.SEQ_NBR   = 1
    )
  )
WHERE CODE = 1
AND RANK   = 1 ;



CREATE OR REPLACE VIEW L_LANGUAGES AS
SELECT CODE,
  DESCRIPTION,
  LANG_CODE,
  DISPLAY_SEQ,
  ACTIVE_FLAG,
  TXT_ID
FROM
  (SELECT CODE,
    DESCRIPTION,
    LANG_CODE,
    DISPLAY_SEQ,
    ACTIVE_FLAG,
    TXT_ID,
    ROW_NUMBER,
    rank() OVER (PARTITION BY CODE ORDER BY ROW_NUMBER DESC) RANK
  FROM
    (SELECT LANG.CODE,
      TXI.TEXT DESCRIPTION,
      TXI.LANG_CODE,
      LANG.DISPLAY_SEQ,
      LANG.ACTIVE_FLAG,
      LANG.TXT_ID,
      row_number() OVER (PARTITION BY LANG.CODE ORDER BY ULP.PREF_SEQ DESC) + 1 ROW_NUMBER
    FROM LANGUAGES LANG
    INNER JOIN USER_LANGUAGE_PREFERENCES ULP
    ON ULP.USERID = sys_context('PSR', 'USERID')
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = LANG.TXT_ID
    AND TXI.LANG_CODE = ULP.LANG_CODE
    AND TXI.TXTT_CODE = 'DESCR'
    AND TXI.SEQ_NBR   = 1
    UNION ALL
    SELECT LANG.CODE,
      TXI.TEXT DESCRIPTION,
      TXI.LANG_CODE,
      LANG.DISPLAY_SEQ,
      LANG.ACTIVE_FLAG,
      LANG.TXT_ID,
      1 ROW_NUMBER
    FROM LANGUAGES LANG
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = LANG.TXT_ID
    AND TXI.LANG_CODE = LANG.CODE
    AND TXI.TXTT_CODE = 'DESCR'
    AND TXI.SEQ_NBR   = 1
    UNION ALL
    SELECT LANG.CODE,
      TXI.TEXT DESCRIPTION,
      TXI.LANG_CODE,
      LANG.DISPLAY_SEQ,
      LANG.ACTIVE_FLAG,
      LANG.TXT_ID,
      0 ROW_NUMBER
    FROM LANGUAGES LANG
    INNER JOIN SYSTEM_PARAMETERS SYP
    ON SYP.CODE = 'FALLBACK LANGUAGE'
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = LANG.TXT_ID
    AND TXI.LANG_CODE = SYP.CHAR_VALUE
    AND TXI.TXTT_CODE = 'DESCR'
    AND TXI.SEQ_NBR   = 1
    UNION ALL
    SELECT LANG.CODE,
      TXI.TEXT DESCRIPTION,
      TXI.LANG_CODE,
      LANG.DISPLAY_SEQ,
      LANG.ACTIVE_FLAG,
      LANG.TXT_ID,
      -row_number() OVER (PARTITION BY LANG.CODE ORDER BY 1) ROW_NUMBER
    FROM LANGUAGES LANG
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = LANG.TXT_ID
    AND TXI.TXTT_CODE = 'DESCR'
    AND TXI.SEQ_NBR   = 1
    )
  )
WHERE RANK = 1 ;



CREATE OR REPLACE VIEW L_MESSAGES AS
SELECT COMP_CODE,
  SEQ_NBR,
  MESSAGE,
  LANG_CODE,
  SEVERITY,
  TXT_ID
FROM
  (SELECT COMP_CODE,
    SEQ_NBR,
    MESSAGE,
    LANG_CODE,
    SEVERITY,
    TXT_ID,
    ROW_NUMBER,
    rank() OVER (PARTITION BY COMP_CODE, SEQ_NBR ORDER BY ROW_NUMBER DESC) RANK
  FROM
    (SELECT MSG.COMP_CODE,
      MSG.SEQ_NBR,
      TXI.TEXT MESSAGE,
      TXI.LANG_CODE,
      MSG.SEVERITY,
      MSG.TXT_ID,
      row_number() OVER (PARTITION BY MSG.COMP_CODE, MSG.SEQ_NBR ORDER BY ULP.PREF_SEQ DESC) ROW_NUMBER
    FROM MESSAGES MSG
    INNER JOIN USER_LANGUAGE_PREFERENCES ULP
    ON ULP.USERID = sys_context('PSR', 'USERID')
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = MSG.TXT_ID
    AND TXI.LANG_CODE = ULP.LANG_CODE
    AND TXI.TXTT_CODE = 'MSG'
    AND TXI.SEQ_NBR   = 1
    UNION ALL
    SELECT MSG.COMP_CODE,
      MSG.SEQ_NBR,
      TXI.TEXT MESSAGE,
      TXI.LANG_CODE,
      MSG.SEVERITY,
      MSG.TXT_ID,
      0 ROW_NUMBER
    FROM MESSAGES MSG
    INNER JOIN SYSTEM_PARAMETERS SYP
    ON SYP.CODE = 'FALLBACK LANGUAGE'
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = MSG.TXT_ID
    AND TXI.LANG_CODE = SYP.CHAR_VALUE
    AND TXI.TXTT_CODE = 'MSG'
    AND TXI.SEQ_NBR   = 1
    UNION ALL
    SELECT MSG.COMP_CODE,
      MSG.SEQ_NBR,
      TXI.TEXT MESSAGE,
      TXI.LANG_CODE,
      MSG.SEVERITY,
      MSG.TXT_ID,
      -row_number() OVER (PARTITION BY MSG.COMP_CODE, MSG.SEQ_NBR ORDER BY 1) ROW_NUMBER
    FROM MESSAGES MSG
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = MSG.TXT_ID
    AND TXI.TXTT_CODE = 'MSG'
    AND TXI.SEQ_NBR   = 1
    )
  )
WHERE RANK = 1 ;



CREATE OR REPLACE VIEW L_SYSTEM_USERS AS
SELECT USERID,
  NAME,
  LANG_CODE,
  LOCKED_FLAG,
  TEMPLATE_FLAG,
  TXT_ID
FROM
  (SELECT USERID,
    NAME,
    LANG_CODE,
    LOCKED_FLAG,
    TEMPLATE_FLAG,
    TXT_ID,
    ROW_NUMBER,
    rank() OVER (PARTITION BY USERID ORDER BY ROW_NUMBER DESC) RANK
  FROM
    (SELECT USR.USERID,
      TXI.TEXT NAME,
      TXI.LANG_CODE,
      USR.LOCKED_FLAG,
      USR.TEMPLATE_FLAG,
      USR.TXT_ID,
      row_number() OVER (PARTITION BY USR.USERID ORDER BY ULP.PREF_SEQ DESC) ROW_NUMBER
    FROM SYSTEM_USERS USR
    INNER JOIN USER_LANGUAGE_PREFERENCES ULP
    ON ULP.USERID = sys_context('PSR', 'USERID')
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = USR.TXT_ID
    AND TXI.LANG_CODE = ULP.LANG_CODE
    AND TXI.TXTT_CODE = 'NAME'
    AND TXI.SEQ_NBR   = 1
    UNION ALL
    SELECT USR.USERID,
      TXI.TEXT NAME,
      TXI.LANG_CODE,
      USR.LOCKED_FLAG,
      USR.TEMPLATE_FLAG,
      USR.TXT_ID,
      0 ROW_NUMBER
    FROM SYSTEM_USERS USR
    INNER JOIN SYSTEM_PARAMETERS SYP
    ON SYP.CODE = 'FALLBACK LANGUAGE'
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = USR.TXT_ID
    AND TXI.LANG_CODE = SYP.CHAR_VALUE
    AND TXI.TXTT_CODE = 'NAME'
    AND TXI.SEQ_NBR   = 1
    UNION ALL
    SELECT USR.USERID,
      TXI.TEXT NAME,
      TXI.LANG_CODE,
      USR.LOCKED_FLAG,
      USR.TEMPLATE_FLAG,
      USR.TXT_ID,
      -row_number() OVER (PARTITION BY USR.USERID ORDER BY 1) ROW_NUMBER
    FROM SYSTEM_USERS USR
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = USR.TXT_ID
    AND TXI.TXTT_CODE = 'NAME'
    AND TXI.SEQ_NBR   = 1
    )
  )
WHERE RANK = 1 ;



CREATE OR REPLACE VIEW L_TEXT_ITEMS AS
SELECT TXT_ID,
  TXTT_CODE,
  SEQ_NBR,
  LANG_CODE,
  TEXT,
  LONG_TEXT
FROM
  (SELECT TXT_ID,
    TXTT_CODE,
    SEQ_NBR,
    LANG_CODE,
    TEXT,
    LONG_TEXT,
    rank() OVER (PARTITION BY TXT_ID, TXTT_CODE, SEQ_NBR ORDER BY ROW_NUMBER DESC) RANK
  FROM
    (SELECT TXI.TXT_ID,
      TXI.TXTT_CODE,
      TXI.SEQ_NBR,
      TXI.LANG_CODE,
      TXI.TEXT,
      TXI.LONG_TEXT,
      row_number() OVER (PARTITION BY TXI.TXT_ID, TXI.TXTT_CODE, TXI.SEQ_NBR ORDER BY ULP.PREF_SEQ DESC) ROW_NUMBER
    FROM USER_LANGUAGE_PREFERENCES ULP
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.LANG_CODE = ULP.LANG_CODE
    WHERE ULP.USERID = sys_context('PSR', 'USERID')
    UNION ALL
    SELECT TXI.TXT_ID,
      TXI.TXTT_CODE,
      TXI.SEQ_NBR,
      TXI.LANG_CODE,
      TXI.TEXT,
      TXI.LONG_TEXT,
      0 ROW_NUMBER
    FROM SYSTEM_PARAMETERS SYP
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.LANG_CODE = SYP.CHAR_VALUE
    WHERE SYP.CODE   = 'FALLBACK LANGUAGE'
    UNION ALL
    SELECT TXI.TXT_ID,
      TXI.TXTT_CODE,
      TXI.SEQ_NBR,
      TXI.LANG_CODE,
      TXI.TEXT,
      TXI.LONG_TEXT,
      -row_number() OVER (PARTITION BY TXI.TXT_ID, TXI.TXTT_CODE, TXI.SEQ_NBR ORDER BY 1) ROW_NUMBER
    FROM TEXT_ITEMS TXI
    )
  )
WHERE RANK = 1 ;



CREATE OR REPLACE VIEW L_TEXT_TYPES AS
SELECT CODE,
  DESCRIPTION,
  LANG_CODE,
  DISPLAY_SEQ,
  ACTIVE_FLAG,
  TXT_ID
FROM
  (SELECT CODE,
    DESCRIPTION,
    LANG_CODE,
    DISPLAY_SEQ,
    ACTIVE_FLAG,
    TXT_ID,
    ROW_NUMBER,
    rank() OVER (PARTITION BY CODE ORDER BY ROW_NUMBER DESC) RANK
  FROM
    (SELECT TXTT.CODE,
      TXI.TEXT DESCRIPTION,
      TXI.LANG_CODE,
      TXTT.DISPLAY_SEQ,
      TXTT.ACTIVE_FLAG,
      TXTT.TXT_ID,
      row_number() OVER (PARTITION BY TXTT.CODE ORDER BY ULP.PREF_SEQ DESC) ROW_NUMBER
    FROM TEXT_TYPES TXTT
    INNER JOIN USER_LANGUAGE_PREFERENCES ULP
    ON ULP.USERID = sys_context('PSR', 'USERID')
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = TXTT.TXT_ID
    AND TXI.LANG_CODE = ULP.LANG_CODE
    AND TXI.TXTT_CODE = 'DESCR'
    AND TXI.SEQ_NBR   = 1
    UNION ALL
    SELECT TXTT.CODE,
      TXI.TEXT DESCRIPTION,
      TXI.LANG_CODE,
      TXTT.DISPLAY_SEQ,
      TXTT.ACTIVE_FLAG,
      TXTT.TXT_ID,
      0 ROW_NUMBER
    FROM TEXT_TYPES TXTT
    INNER JOIN SYSTEM_PARAMETERS SYP
    ON SYP.CODE = 'FALLBACK LANGUAGE'
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = TXTT.TXT_ID
    AND TXI.LANG_CODE = SYP.CHAR_VALUE
    AND TXI.TXTT_CODE = 'DESCR'
    AND TXI.SEQ_NBR   = 1
    UNION ALL
    SELECT TXTT.CODE,
      TXI.TEXT DESCRIPTION,
      TXI.LANG_CODE,
      TXTT.DISPLAY_SEQ,
      TXTT.ACTIVE_FLAG,
      TXTT.TXT_ID,
      -row_number() OVER (PARTITION BY TXTT.CODE ORDER BY 1) ROW_NUMBER
    FROM TEXT_TYPES TXTT
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = TXTT.TXT_ID
    AND TXI.TXTT_CODE = 'DESCR'
    AND TXI.SEQ_NBR   = 1
    )
  )
WHERE RANK = 1 ;



CREATE OR REPLACE VIEW L_USER_ATTRIBUTE_TYPES AS
SELECT CODE,
  DESCRIPTION,
  LANG_CODE,
  DATA_TYPE,
  DISPLAY_SEQ,
  ACTIVE_FLAG,
  TXT_ID
FROM
  (SELECT CODE,
    DESCRIPTION,
    LANG_CODE,
    DATA_TYPE,
    DISPLAY_SEQ,
    ACTIVE_FLAG,
    TXT_ID,
    ROW_NUMBER,
    rank() OVER (PARTITION BY CODE ORDER BY ROW_NUMBER DESC) RANK
  FROM
    (SELECT UATT.CODE,
      TXI.TEXT DESCRIPTION,
      TXI.LANG_CODE,
      UATT.DATA_TYPE,
      UATT.DISPLAY_SEQ,
      UATT.ACTIVE_FLAG,
      UATT.TXT_ID,
      row_number() OVER (PARTITION BY UATT.CODE ORDER BY ULP.PREF_SEQ DESC) ROW_NUMBER
    FROM USER_ATTRIBUTE_TYPES UATT
    INNER JOIN USER_LANGUAGE_PREFERENCES ULP
    ON ULP.USERID = sys_context('PSR', 'USERID')
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = UATT.TXT_ID
    AND TXI.LANG_CODE = ULP.LANG_CODE
    AND TXI.TXTT_CODE = 'DESCR'
    AND TXI.SEQ_NBR   = 1
    UNION ALL
    SELECT UATT.CODE,
      TXI.TEXT DESCRIPTION,
      TXI.LANG_CODE,
      UATT.DATA_TYPE,
      UATT.DISPLAY_SEQ,
      UATT.ACTIVE_FLAG,
      UATT.TXT_ID,
      0 ROW_NUMBER
    FROM USER_ATTRIBUTE_TYPES UATT
    INNER JOIN SYSTEM_PARAMETERS SYP
    ON SYP.CODE = 'FALLBACK LANGUAGE'
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = UATT.TXT_ID
    AND TXI.LANG_CODE = SYP.CHAR_VALUE
    AND TXI.TXTT_CODE = 'DESCR'
    AND TXI.SEQ_NBR   = 1
    UNION ALL
    SELECT UATT.CODE,
      TXI.TEXT DESCRIPTION,
      TXI.LANG_CODE,
      UATT.DATA_TYPE,
      UATT.DISPLAY_SEQ,
      UATT.ACTIVE_FLAG,
      UATT.TXT_ID,
      -row_number() OVER (PARTITION BY UATT.CODE ORDER BY 1) ROW_NUMBER
    FROM USER_ATTRIBUTE_TYPES UATT
    INNER JOIN TEXT_ITEMS TXI
    ON TXI.TXT_ID     = UATT.TXT_ID
    AND TXI.TXTT_CODE = 'DESCR'
    AND TXI.SEQ_NBR   = 1
    )
  )
WHERE RANK = 1 ;



CREATE SEQUENCE LOC_SEQ 
    MAXVALUE 9999999 ;

CREATE SEQUENCE STC_SEQ ;

CREATE SEQUENCE STB_SEQ ;

CREATE SEQUENCE TXT_SEQ ;

CREATE SEQUENCE PER_SEQ ;



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            31
-- CREATE INDEX                             4
-- ALTER TABLE                            143
-- CREATE VIEW                              7
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE STRUCTURED TYPE                   0
-- CREATE COLLECTION TYPE                   0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          5
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
